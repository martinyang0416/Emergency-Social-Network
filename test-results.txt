npm verbose cli /usr/local/bin/node /usr/local/bin/npm
npm info using npm@10.8.2
npm info using node@v20.18.0
npm verbose title npm test
npm verbose argv "test" "--loglevel" "verbose"
npm verbose logfile logs-max:10 dir:/Users/shangchienliu/.npm/_logs/2024-12-01T06_06_20_080Z-
npm verbose logfile /Users/shangchienliu/.npm/_logs/2024-12-01T06_06_20_080Z-debug-0.log

> f24-fse-sb2@1.0.0 test
> jest --coverage

● Validation Warning:

  Unknown option "test" with value "jest --detectOpenHandles" was found.
  This is probably a typing mistake. Fixing it will remove this message.

  Configuration Documentation:
  https://jestjs.io/docs/configuration

● Validation Warning:

  Unknown option "test" with value "jest --detectOpenHandles" was found.
  This is probably a typing mistake. Fixing it will remove this message.

  Configuration Documentation:
  https://jestjs.io/docs/configuration

FAIL tests/integration/searchController.test.js
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      UserSearch processSearch called with: [ 'test-content' ]

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error fetching announcements: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:71:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT a.id,\n' +
          '                    a.announcement_content,\n' +
          '                    a.announcement_sent_time,\n' +
          '                    u.user_name AS announcement_sender,\n' +
          '                    a.announcement_sender_status\n' +
          '                FROM announcements a\n' +
          '                JOIN user u ON a.sender_id = u.id\n' +
          '                WHERE announcement_content LIKE ?\n' +
          "                AND u.account_status = 'active'\n" +
          '                ORDER BY a.announcement_sent_time DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      73 |             return rows;
      74 |         } catch (error) {
    > 75 |             console.error('Error fetching announcements:', error);
         |                     ^
      76 |             throw error;
      77 |         }
      78 |     }

      at error (models/messageModel.js:75:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error executing query Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:71:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      19 |             return announcements.slice(offset, offset + limit);
      20 |         } catch (err) {
    > 21 |             console.error("Error executing query", err.stack);
         |                     ^
      22 |             throw err;
      23 |         }
      24 |     }    

      at error (service/searchControllerService/announcementSearchStrategy.js:21:21)
      at call (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at Generator.tryCatch (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/announcementSearchStrategy.js:2:1)

    console.error
      Error in userSearch: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:71:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT a.id,\n' +
          '                    a.announcement_content,\n' +
          '                    a.announcement_sent_time,\n' +
          '                    u.user_name AS announcement_sender,\n' +
          '                    a.announcement_sender_status\n' +
          '                FROM announcements a\n' +
          '                JOIN user u ON a.sender_id = u.id\n' +
          '                WHERE announcement_content LIKE ?\n' +
          "                AND u.account_status = 'active'\n" +
          '                ORDER BY a.announcement_sent_time DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: null

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error executing query Error: Invalid word list
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:12:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at new Promise (<anonymous>)
          at announcementSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at announcementSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:4:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:35:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:15:37)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postAmmouncementSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:9:40)
          at postAmmouncementSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:138:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      19 |             return announcements.slice(offset, offset + limit);
      20 |         } catch (err) {
    > 21 |             console.error("Error executing query", err.stack);
         |                     ^
      22 |             throw err;
      23 |         }
      24 |     }    

      at error (service/searchControllerService/announcementSearchStrategy.js:21:21)
      at call (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at Generator.tryCatch (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at Generator._invoke [as next] (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at _next (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at announcementSearchStrategy.<anonymous> (service/searchControllerService/announcementSearchStrategy.js:2:1)
      at announcementSearchStrategy.apply [as processSearch] (service/searchControllerService/announcementSearchStrategy.js:4:24)
      at userSearch.processSearch (service/searchControllerService/userSearch.js:35:50)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as next] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at _next (service/searchControllerService/userSearch.js:2:1)
      at userSearch.<anonymous> (service/searchControllerService/userSearch.js:2:1)
      at userSearch.apply [as processSearch] (service/searchControllerService/userSearch.js:29:24)
      at processSearch (controllers/searchController.js:15:37)
      at call (controllers/searchController.js:2:1)
      at Generator.tryCatch (controllers/searchController.js:2:1)
      at Generator._invoke [as next] (controllers/searchController.js:2:1)
      at asyncGeneratorStep (controllers/searchController.js:2:1)
      at asyncGeneratorStep (controllers/searchController.js:2:1)
      at _next (controllers/searchController.js:2:1)
      at Function.<anonymous> (controllers/searchController.js:2:1)
      at Function.apply [as postAmmouncementSearch] (controllers/searchController.js:9:40)
      at postAmmouncementSearch (tests/integration/searchController.test.js:138:34)
      at call (tests/integration/searchController.test.js:2:1)
      at Generator.tryCatch (tests/integration/searchController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/searchController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/searchController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/searchController.test.js:2:1)
      at _next (tests/integration/searchController.test.js:2:1)
      at Object.<anonymous> (tests/integration/searchController.test.js:2:1)

    console.error
      Error in userSearch: Error: Invalid word list
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:12:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at new Promise (<anonymous>)
          at announcementSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:2:1)
          at announcementSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/announcementSearchStrategy.js:4:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:35:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:15:37)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postAmmouncementSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:9:40)
          at postAmmouncementSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:138:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: [ 'hello' ]

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error fetching private messages by words: Error: Unknown column 'u_sender.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:266:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT pm.*\n' +
          '                FROM privateMessage pm\n' +
          '                JOIN user u_sender ON pm.sender_id = u_sender.id\n' +
          '                JOIN user u_receiver ON pm.receiver_id = u_receiver.id\n' +
          '                WHERE (\n' +
          '                (message_sender = ? AND message_receiver = ?) \n' +
          '                OR (message_sender = ? AND message_receiver = ?)\n' +
          '            )\n' +
          '                AND (message_text LIKE ?)\n' +
          "                AND u_sender.account_status = 'active'\n" +
          "                AND u_receiver.account_status = 'active'\n" +
          '                ORDER BY pm.message_sent_time DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u_sender.account_status' in 'where clause'"
      }

      268 |             return rows;
      269 |         } catch (error) {
    > 270 |             console.error('Error fetching private messages by words:', error);
          |                     ^
      271 |             throw error;
      272 |         }
      273 |     }

      at error (models/messageModel.js:270:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error in userSearch: Error: Unknown column 'u_sender.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:266:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT pm.*\n' +
          '                FROM privateMessage pm\n' +
          '                JOIN user u_sender ON pm.sender_id = u_sender.id\n' +
          '                JOIN user u_receiver ON pm.receiver_id = u_receiver.id\n' +
          '                WHERE (\n' +
          '                (message_sender = ? AND message_receiver = ?) \n' +
          '                OR (message_sender = ? AND message_receiver = ?)\n' +
          '            )\n' +
          '                AND (message_text LIKE ?)\n' +
          "                AND u_sender.account_status = 'active'\n" +
          "                AND u_receiver.account_status = 'active'\n" +
          '                ORDER BY pm.message_sent_time DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u_sender.account_status' in 'where clause'"
      }

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: null

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error in userSearch: Error: Invalid word list
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:18:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at new Promise (<anonymous>)
          at privateMessageSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:2:1)
          at privateMessageSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/privateMessageSearchStrategy.js:5:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:37:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:42:47)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postPrivateMessageSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:29:42)
          at postPrivateMessageSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:181:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: [ 'Public message' ]

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error fetching announcements: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:103:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT m.id,\n' +
          '                    m.message_text,\n' +
          '                    m.message_sent_time,\n' +
          '                    u.user_name AS message_sender,\n' +
          '                    m.message_sender_status\n' +
          '                FROM message m\n' +
          '                JOIN user u ON m.sender_id = u.id\n' +
          '                WHERE message_text LIKE ?\n' +
          "                AND u.account_status = 'active'\n" +
          '                ORDER BY m.message_sent_time DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      105 |             return rows;
      106 |         } catch (error) {
    > 107 |             console.error('Error fetching announcements:', error);
          |                     ^
      108 |             throw error;
      109 |         }
      110 |     }

      at error (models/messageModel.js:107:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error in userSearch: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:103:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT m.id,\n' +
          '                    m.message_text,\n' +
          '                    m.message_sent_time,\n' +
          '                    u.user_name AS message_sender,\n' +
          '                    m.message_sender_status\n' +
          '                FROM message m\n' +
          '                JOIN user u ON m.sender_id = u.id\n' +
          '                WHERE message_text LIKE ?\n' +
          "                AND u.account_status = 'active'\n" +
          '                ORDER BY m.message_sent_time DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: null

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error in userSearch: Error: Invalid word list
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:12:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at new Promise (<anonymous>)
          at publicMessageSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:2:1)
          at publicMessageSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/publicMessageSearchStrategy.js:4:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:39:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:74:37)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postPublicMessageSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:68:41)
          at postPublicMessageSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:228:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: Help

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error executing search query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:140:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      153 |             }));
      154 |         } catch (err) {
    > 155 |             console.error("Error executing search query", err.stack);
          |                     ^
      156 |             throw err;
      157 |         }
      158 |     }

      at error (models/userModel.js:155:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error in userSearch: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:140:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT id,\n' +
          '                user_name AS username,\n' +
          '                status AS citizenStatus,\n' +
          '                online_status AS onlineStatus\n' +
          '            FROM user\n' +
          '            WHERE status = ?\n' +
          "            AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.error
      Error in postStatusSearch: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:140:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT id,\n' +
          '                user_name AS username,\n' +
          '                status AS citizenStatus,\n' +
          '                online_status AS onlineStatus\n' +
          '            FROM user\n' +
          '            WHERE status = ?\n' +
          "            AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      100 |             return await search.processSearch();
      101 |         } catch (error) {
    > 102 |             console.error("Error in postStatusSearch:", error);
          |                     ^
      103 |             throw error;
      104 |         }
      105 |     }

      at error (controllers/searchController.js:102:21)
      at call (controllers/searchController.js:2:1)
      at Generator.tryCatch (controllers/searchController.js:2:1)
      at Generator._invoke [as throw] (controllers/searchController.js:2:1)
      at asyncGeneratorStep (controllers/searchController.js:2:1)
      at asyncGeneratorStep (controllers/searchController.js:2:1)

    console.log
      UserSearch processSearch called with: null

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error in userSearch: Error: Invalid userStatus input
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:8:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at new Promise (<anonymous>)
          at statusSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at statusSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:6:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:43:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:100:33)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postStatusSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:95:34)
          at postStatusSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:270:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.error
      Error in postStatusSearch: Error: Invalid userStatus input
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:8:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at new Promise (<anonymous>)
          at statusSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:2:1)
          at statusSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/statusSearchStrategy.js:6:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:43:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:100:33)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postStatusSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:95:34)
          at postStatusSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:270:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      100 |             return await search.processSearch();
      101 |         } catch (error) {
    > 102 |             console.error("Error in postStatusSearch:", error);
          |                     ^
      103 |             throw error;
      104 |         }
      105 |     }

      at error (controllers/searchController.js:102:21)
      at call (controllers/searchController.js:2:1)
      at Generator.tryCatch (controllers/searchController.js:2:1)
      at Generator._invoke [as throw] (controllers/searchController.js:2:1)
      at asyncGeneratorStep (controllers/searchController.js:2:1)
      at asyncGeneratorStep (controllers/searchController.js:2:1)

    console.log
      UserSearch processSearch called with: User

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error executing search query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:244:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      259 |             }));
      260 |         } catch (err) {
    > 261 |             console.error("Error executing search query", err.stack);
          |                     ^
      262 |             throw err;
      263 |         }
      264 |     }

      at error (models/userModel.js:261:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error in userSearch: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:244:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT id,\n' +
          '                    user_name AS username,\n' +
          '                    status AS citizenStatus,\n' +
          '                    online_status AS onlineStatus\n' +
          '                FROM user\n' +
          '                WHERE user_name LIKE ?\n' +
          "                AND account_status = 'active';\n" +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

    console.log
      UserSearch processSearch called with: null

      at userSearch.log (service/searchControllerService/userSearch.js:31:17)

    console.error
      Error in userSearch: Error: Invalid userName input
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:7:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at new Promise (<anonymous>)
          at usernameSearchStrategy.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:2:1)
          at usernameSearchStrategy.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/usernameSearchstrategy.js:5:24)
          at userSearch.processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:41:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at new Promise (<anonymous>)
          at userSearch.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:2:1)
          at userSearch.apply [as processSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/service/searchControllerService/userSearch.js:29:24)
          at processSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:92:29)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:2:1)
          at Function.apply [as postUsernameSearch] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/searchController.js:88:36)
          at postUsernameSearch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:302:34)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/searchController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      47 |         }
      48 |         catch(error) {
    > 49 |             console.error('Error in userSearch:', error);
         |                     ^
      50 |             throw error;
      51 |         }
      52 |     }

      at userSearch.error (service/searchControllerService/userSearch.js:49:21)
      at call (service/searchControllerService/userSearch.js:2:1)
      at Generator.tryCatch (service/searchControllerService/userSearch.js:2:1)
      at Generator._invoke [as throw] (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)
      at asyncGeneratorStep (service/searchControllerService/userSearch.js:2:1)

  ● searchController Integration Tests › postAmmouncementSearch › should return formatted announcement search results with wordList, limit, and offset (Positive Case)

    Unknown column 'u.account_status' in 'where clause'

      69 |     
      70 |             // Execute the query with the patterns as input
    > 71 |             const [rows] = await connection.execute(query, searchPatterns);
         |                                             ^
      72 |             console.log('Fetched announcements from database:', rows);
      73 |             return rows;
      74 |         } catch (error) {

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/messageModel.js:71:45)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● searchController Integration Tests › postPrivateMessageSearch › should return formatted private message search results (Positive Case)

    Unknown column 'u_sender.account_status' in 'where clause'

      264 |     
      265 |             // Execute the query
    > 266 |             const [rows] = await connection.execute(query, queryParams);
          |                                             ^
      267 |     
      268 |             return rows;
      269 |         } catch (error) {

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/messageModel.js:266:45)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● searchController Integration Tests › postPublicMessageSearch › should return formatted public message search results (Positive Case)

    Unknown column 'u.account_status' in 'where clause'

      101 |     
      102 |             // Execute the query with the patterns as input
    > 103 |             const [rows] = await connection.execute(query, searchPatterns);
          |                                             ^
      104 |             console.log('Fetched announcements from database:', rows);
      105 |             return rows;
      106 |         } catch (error) {

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/messageModel.js:103:45)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● searchController Integration Tests › postStatusSearch › should return user status search results (Positive Case)

    Unknown column 'account_status' in 'where clause'

      138 |
      139 |             // Execute query with the provided citizen status
    > 140 |             const [rows] = await connection.execute(query, [citizenStatus]);
          |                                             ^
      141 |
      142 |             if (rows.length === 0) {
      143 |                 console.log(`No users found with status: ${citizenStatus}`);

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/userModel.js:140:45)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as next] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

  ● searchController Integration Tests › postUsernameSearch › should return username search results (Positive Case)

    Unknown column 'account_status' in 'where clause'

      242 |
      243 |             // Add wildcards to search for partial matches
    > 244 |             const [rows] = await connection.execute(query, [
          |                                             ^
      245 |                 `%${partialUsername}%`,
      246 |             ]);
      247 |

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/userModel.js:244:45)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as next] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

FAIL tests/integration/reviewController.test.js
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error fetching reviews: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:20:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT u.user_name AS reviewer_name,\n' +
          '                rr.review_content,\n' +
          '                rr.upvote_downvote,\n' +
          '                rr.created_at\n' +
          '            FROM resource_reviews rr\n' +
          '            JOIN user u ON rr.reviewer_id = u.id\n' +
          '            WHERE rr.resource_id = ?\n' +
          "            AND u.account_status = 'active'\n" +
          '            ORDER BY rr.created_at DESC;\n' +
          '        ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      21 |             return rows;
      22 |         } catch (error) {
    > 23 |             console.error("Error fetching reviews:", error);
         |                     ^
      24 |             throw error;
      25 |         }
      26 |     }

      at error (models/reviewModel.js:23:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as throw] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error fetching reviews: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:20:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT u.user_name AS reviewer_name,\n' +
          '                rr.review_content,\n' +
          '                rr.upvote_downvote,\n' +
          '                rr.created_at\n' +
          '            FROM resource_reviews rr\n' +
          '            JOIN user u ON rr.reviewer_id = u.id\n' +
          '            WHERE rr.resource_id = ?\n' +
          "            AND u.account_status = 'active'\n" +
          '            ORDER BY rr.created_at DESC;\n' +
          '        ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      14 |             });
      15 |         } catch (error) {
    > 16 |             console.error("Error fetching reviews:", error);
         |                     ^
      17 |             res.status(500).json({
      18 |                 message: "Error fetching reviews",
      19 |                 error: error.message,

      at error (controllers/reviewController.js:16:21)
      at call (controllers/reviewController.js:2:1)
      at Generator.tryCatch (controllers/reviewController.js:2:1)
      at Generator._invoke [as throw] (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)

    console.error
      Error fetching reviews: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:20:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT u.user_name AS reviewer_name,\n' +
          '                rr.review_content,\n' +
          '                rr.upvote_downvote,\n' +
          '                rr.created_at\n' +
          '            FROM resource_reviews rr\n' +
          '            JOIN user u ON rr.reviewer_id = u.id\n' +
          '            WHERE rr.resource_id = ?\n' +
          "            AND u.account_status = 'active'\n" +
          '            ORDER BY rr.created_at DESC;\n' +
          '        ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      21 |             return rows;
      22 |         } catch (error) {
    > 23 |             console.error("Error fetching reviews:", error);
         |                     ^
      24 |             throw error;
      25 |         }
      26 |     }

      at error (models/reviewModel.js:23:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as throw] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error fetching reviews: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:20:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT u.user_name AS reviewer_name,\n' +
          '                rr.review_content,\n' +
          '                rr.upvote_downvote,\n' +
          '                rr.created_at\n' +
          '            FROM resource_reviews rr\n' +
          '            JOIN user u ON rr.reviewer_id = u.id\n' +
          '            WHERE rr.resource_id = ?\n' +
          "            AND u.account_status = 'active'\n" +
          '            ORDER BY rr.created_at DESC;\n' +
          '        ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      14 |             });
      15 |         } catch (error) {
    > 16 |             console.error("Error fetching reviews:", error);
         |                     ^
      17 |             res.status(500).json({
      18 |                 message: "Error fetching reviews",
      19 |                 error: error.message,

      at error (controllers/reviewController.js:16:21)
      at call (controllers/reviewController.js:2:1)
      at Generator.tryCatch (controllers/reviewController.js:2:1)
      at Generator._invoke [as throw] (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)

    console.error
      Error fetching reviews: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:20:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT u.user_name AS reviewer_name,\n' +
          '                rr.review_content,\n' +
          '                rr.upvote_downvote,\n' +
          '                rr.created_at\n' +
          '            FROM resource_reviews rr\n' +
          '            JOIN user u ON rr.reviewer_id = u.id\n' +
          '            WHERE rr.resource_id = ?\n' +
          "            AND u.account_status = 'active'\n" +
          '            ORDER BY rr.created_at DESC;\n' +
          '        ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      21 |             return rows;
      22 |         } catch (error) {
    > 23 |             console.error("Error fetching reviews:", error);
         |                     ^
      24 |             throw error;
      25 |         }
      26 |     }

      at error (models/reviewModel.js:23:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as throw] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error fetching reviews: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:20:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT u.user_name AS reviewer_name,\n' +
          '                rr.review_content,\n' +
          '                rr.upvote_downvote,\n' +
          '                rr.created_at\n' +
          '            FROM resource_reviews rr\n' +
          '            JOIN user u ON rr.reviewer_id = u.id\n' +
          '            WHERE rr.resource_id = ?\n' +
          "            AND u.account_status = 'active'\n" +
          '            ORDER BY rr.created_at DESC;\n' +
          '        ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      14 |             });
      15 |         } catch (error) {
    > 16 |             console.error("Error fetching reviews:", error);
         |                     ^
      17 |             res.status(500).json({
      18 |                 message: "Error fetching reviews",
      19 |                 error: error.message,

      at error (controllers/reviewController.js:16:21)
      at call (controllers/reviewController.js:2:1)
      at Generator.tryCatch (controllers/reviewController.js:2:1)
      at Generator._invoke [as throw] (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)

    console.error
      Error adding review: Reviewer not found

      62 |             return result;
      63 |         } catch (error) {
    > 64 |             console.error("Error adding review:", error.message);
         |                     ^
      65 |             throw error;
      66 |         }        
      67 |     }

      at error (models/reviewModel.js:64:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error adding review: Error: Reviewer not found
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:43:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      49 |             });
      50 |         } catch (error) {
    > 51 |             console.error("Error adding review:", error);
         |                     ^
      52 |             res.status(500).json({ message: "Error adding review", error: error.message });
      53 |         }
      54 |     }

      at error (controllers/reviewController.js:51:21)
      at call (controllers/reviewController.js:2:1)
      at Generator.tryCatch (controllers/reviewController.js:2:1)
      at Generator._invoke [as throw] (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)

    console.error
      Error adding review: Reviewer not found

      62 |             return result;
      63 |         } catch (error) {
    > 64 |             console.error("Error adding review:", error.message);
         |                     ^
      65 |             throw error;
      66 |         }        
      67 |     }

      at error (models/reviewModel.js:64:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error adding review: Error: Reviewer not found
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:43:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/reviewModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      49 |             });
      50 |         } catch (error) {
    > 51 |             console.error("Error adding review:", error);
         |                     ^
      52 |             res.status(500).json({ message: "Error adding review", error: error.message });
      53 |         }
      54 |     }

      at error (controllers/reviewController.js:51:21)
      at call (controllers/reviewController.js:2:1)
      at Generator.tryCatch (controllers/reviewController.js:2:1)
      at Generator._invoke [as throw] (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)
      at asyncGeneratorStep (controllers/reviewController.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should fetch all reviews for a given resource ID successfully (positive)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      73 |             await ReviewController.getReviews(req, res);
      74 |
    > 75 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      76 |             expect(res.json).toHaveBeenCalledWith({
      77 |                 message: "Reviews fetched successfully",
      78 |                 data: expect.arrayContaining([

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:75:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should return an empty array if no reviews exist for the resource (positive)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      100 |             await ReviewController.getReviews(req, res);
      101 |
    > 102 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      103 |             expect(res.json).toHaveBeenCalledWith({
      104 |                 message: "Reviews fetched successfully",
      105 |                 data: [],

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:102:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should return 500 if there is an error fetching reviews (negative)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      117 |
      118 |             await ReviewController.getReviews(req, res);
    > 119 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      120 |
      121 |             jest.restoreAllMocks();
      122 |         });

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:119:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should return 500 if there is an error fetching reviews (negative)

    Database Error

      108 |
      109 |         it("should return 500 if there is an error fetching reviews (negative)", async () => {
    > 110 |             jest.spyOn(dbConnection, "query").mockRejectedValueOnce(new Error("Database Error"));
          |                                                                     ^
      111 |
      112 |             const req = { params: { resourceId: 1 } };
      113 |             const res = {

      at _callee7$ (tests/integration/reviewController.test.js:110:69)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at _next (tests/integration/reviewController.test.js:2:1)
      at Object.<anonymous> (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › addReview › should add a new review successfully (positive)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      142 |             await ReviewController.addReview(req, res);
      143 |
    > 144 |             expect(res.status).toHaveBeenCalledWith(201);
          |                                ^
      145 |
      146 |             const [rows] = await dbConnection.query(
      147 |                 "SELECT * FROM resource_reviews WHERE review_content = ?",

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:144:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › addReview › should return 500 if there is an error adding the review (negative)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      192 |
      193 |             await ReviewController.addReview(req, res);
    > 194 |             expect(res.status).toHaveBeenCalledWith(201);
          |                                ^
      195 |
      196 |             jest.restoreAllMocks();
      197 |         });

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:194:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › addReview › should return 500 if there is an error adding the review (negative)

    Database Error

      179 |
      180 |         it("should return 500 if there is an error adding the review (negative)", async () => {
    > 181 |             jest.spyOn(dbConnection, "query").mockRejectedValueOnce(new Error("Database Error"));
          |                                                                     ^
      182 |
      183 |             const req = {
      184 |                 params: { resourceId: 1 },

      at _callee11$ (tests/integration/reviewController.test.js:181:69)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at _next (tests/integration/reviewController.test.js:2:1)
      at Object.<anonymous> (tests/integration/reviewController.test.js:2:1)

FAIL tests/integration/announcement.test.js (5.17 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error sending message: Unknown column 'account_status' in 'where clause'

      63 |             });
      64 |         } catch (error) {
    > 65 |             console.error("Error sending message:", error.message);
         |                     ^
      66 |             res.status(500).json({
      67 |                 message: "Error sending message",
      68 |                 error: error.message,

      at error (controllers/messageController.js:65:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error sending message: Sender name is missing.

      63 |             });
      64 |         } catch (error) {
    > 65 |             console.error("Error sending message:", error.message);
         |                     ^
      66 |             res.status(500).json({
      67 |                 message: "Error sending message",
      68 |                 error: error.message,

      at error (controllers/messageController.js:65:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as next] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at _next (controllers/messageController.js:2:1)
      at Function.<anonymous> (controllers/messageController.js:2:1)
      at Function.apply [as sendMessage] (controllers/messageController.js:7:29)
      at sendMessage (tests/integration/announcement.test.js:86:37)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at _next (tests/integration/announcement.test.js:2:1)
      at Object.<anonymous> (tests/integration/announcement.test.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error sending message: Unknown column 'account_status' in 'where clause'

      63 |             });
      64 |         } catch (error) {
    > 65 |             console.error("Error sending message:", error.message);
         |                     ^
      66 |             res.status(500).json({
      67 |                 message: "Error sending message",
      68 |                 error: error.message,

      at error (controllers/messageController.js:65:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error sending message: Unknown column 'account_status' in 'where clause'

      63 |             });
      64 |         } catch (error) {
    > 65 |             console.error("Error sending message:", error.message);
         |                     ^
      66 |             res.status(500).json({
      67 |                 message: "Error sending message",
      68 |                 error: error.message,

      at error (controllers/messageController.js:65:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.log
      Message ID:

      at log (controllers/messageController.js:76:17)

    console.log
      2

      at log (controllers/messageController.js:77:17)

    console.log
      number

      at log (controllers/messageController.js:78:17)

    console.log
      correct

      at log (models/messageModel.js:129:25)

    console.error
      Error fetching messages: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:141:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT a.announcement_content AS message_text,\n' +
          '                    a.announcement_sent_time AS message_sent_time,\n' +
          '                    u.user_name AS message_sender,\n' +
          '                    a.announcement_sender_status AS message_sender_status\n' +
          '                FROM announcements a\n' +
          '                JOIN user u ON a.sender_id = u.id\n' +
          "                WHERE u.account_status = 'active'\n" +
          '                ORDER BY a.announcement_sent_time ASC;\n' +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      143 |             return rows;
      144 |         } catch (error) {
    > 145 |             console.error('Error fetching messages:', error);
          |                     ^
      146 |             throw error;
      147 |         }
      148 |     }

      at error (models/messageModel.js:145:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error fetching messages: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:141:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT a.announcement_content AS message_text,\n' +
          '                    a.announcement_sent_time AS message_sent_time,\n' +
          '                    u.user_name AS message_sender,\n' +
          '                    a.announcement_sender_status AS message_sender_status\n' +
          '                FROM announcements a\n' +
          '                JOIN user u ON a.sender_id = u.id\n' +
          "                WHERE u.account_status = 'active'\n" +
          '                ORDER BY a.announcement_sent_time ASC;\n' +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      86 |             res.status(200).json(modifiedMessages);
      87 |         } catch (error) {
    > 88 |             console.error("Error fetching messages:", error);
         |                     ^
      89 |             res.status(500).json({ message: "Error fetching messages" });
      90 |         }
      91 |     }

      at error (controllers/messageController.js:88:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.log
      Message ID:

      at log (controllers/messageController.js:76:17)

    console.log
      2

      at log (controllers/messageController.js:77:17)

    console.log
      number

      at log (controllers/messageController.js:78:17)

    console.log
      correct

      at log (models/messageModel.js:129:25)

    console.error
      Error fetching messages: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:141:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT a.announcement_content AS message_text,\n' +
          '                    a.announcement_sent_time AS message_sent_time,\n' +
          '                    u.user_name AS message_sender,\n' +
          '                    a.announcement_sender_status AS message_sender_status\n' +
          '                FROM announcements a\n' +
          '                JOIN user u ON a.sender_id = u.id\n' +
          "                WHERE u.account_status = 'active'\n" +
          '                ORDER BY a.announcement_sent_time ASC;\n' +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      143 |             return rows;
      144 |         } catch (error) {
    > 145 |             console.error('Error fetching messages:', error);
          |                     ^
      146 |             throw error;
      147 |         }
      148 |     }

      at error (models/messageModel.js:145:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error fetching messages: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:141:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT a.announcement_content AS message_text,\n' +
          '                    a.announcement_sent_time AS message_sent_time,\n' +
          '                    u.user_name AS message_sender,\n' +
          '                    a.announcement_sender_status AS message_sender_status\n' +
          '                FROM announcements a\n' +
          '                JOIN user u ON a.sender_id = u.id\n' +
          "                WHERE u.account_status = 'active'\n" +
          '                ORDER BY a.announcement_sent_time ASC;\n' +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      86 |             res.status(200).json(modifiedMessages);
      87 |         } catch (error) {
    > 88 |             console.error("Error fetching messages:", error);
         |                     ^
      89 |             res.status(500).json({ message: "Error fetching messages" });
      90 |         }
      91 |     }

      at error (controllers/messageController.js:88:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

  ● Announcement Feature Integration Test › sendAnnouncement › should send an announcement successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      54 |
      55 |             // Verify the response
    > 56 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      57 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      58 |                 message: 'Message sent successfully',
      59 |                 result: expect.any(Object)

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:56:32)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › Negative Test Cases for sendAnnouncement › should fail when message content is missing

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"error": "Bind parameters must not contain undefined. To pass SQL NULL specify JS null", "message": "Error sending message"}
    Received: {"error": "Unknown column 'account_status' in 'where clause'", "message": "Error sending message"}

    Number of calls: 1

      111 |             // Verify the response
      112 |             expect(res.status).toHaveBeenCalledWith(500);
    > 113 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
          |                              ^
      114 |                 message: 'Error sending message',
      115 |                 error: 'Bind parameters must not contain undefined. To pass SQL NULL specify JS null'
      116 |             }));

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:113:30)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › Negative Test Cases for sendAnnouncement › should fail when the user does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"error": "User with username 'nonExistentUser' not found.", "message": "Error sending message"}
    Received: {"error": "Unknown column 'account_status' in 'where clause'", "message": "Error sending message"}

    Number of calls: 1

      135 |             // Verify the response
      136 |             expect(res.status).toHaveBeenCalledWith(500);
    > 137 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
          |                              ^
      138 |                 message: 'Error sending message',
      139 |                 error: "User with username 'nonExistentUser' not found."
      140 |             }));

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:137:30)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › getAllAnnouncements › should retrieve all announcements

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      165 |
      166 |             // Verify the response
    > 167 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      168 |             expect(res.json).toHaveBeenCalledWith(expect.any(Array));
      169 |             const announcements = res.json.mock.calls[0][0];
      170 |             expect(announcements.length).toBeGreaterThan(0);

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:167:32)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › Negative Test Cases for getAllAnnouncements › should return an empty array when there are no announcements

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      192 |
      193 |             // Verify the response
    > 194 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      195 |             expect(res.json).toHaveBeenCalledWith([]);
      196 |         });
      197 |     });

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:194:32)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

FAIL tests/unit/incidentPostModel.test.js
  ● Console

    console.error
      Error inserting incident post: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      62 |             };
      63 |         } catch (err) {
    > 64 |             console.error('Error inserting incident post:', err.message);
         |                     ^
      65 |             throw new Error('Failed to create incident post. Please try again later.');
      66 |         }              
      67 |     }

      at error (models/incidentPostModel.js:64:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error inserting incident post: Database error

      62 |             };
      63 |         } catch (err) {
    > 64 |             console.error('Error inserting incident post:', err.message);
         |                     ^
      65 |             throw new Error('Failed to create incident post. Please try again later.');
      66 |         }              
      67 |     }

      at error (models/incidentPostModel.js:64:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error inserting image: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      103 |             return result;
      104 |         } catch (err) {
    > 105 |             console.error("Error inserting image:", err.message);
          |                     ^
      106 |             throw err;
      107 |         }
      108 |         

      at error (models/incidentPostModel.js:105:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error inserting image: Database error

      103 |             return result;
      104 |         } catch (err) {
    > 105 |             console.error("Error inserting image:", err.message);
          |                     ^
      106 |             throw err;
      107 |         }
      108 |         

      at error (models/incidentPostModel.js:105:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error: Database error
          at _callee6$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:122:44)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      118 |             return result;
      119 |         } catch (err) {
    > 120 |             console.error(err);
          |                     ^
      121 |         }
      122 |     }
      123 |

      at error (models/incidentPostModel.js:120:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error updating incident post: Error: No rows updated. Incident not found.
          at _callee4$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:136:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      152 |             return updatedRow[0]; // Assuming only one row is returned
      153 |         } catch (err) {
    > 154 |             console.error("Error updating incident post:", err);
          |                     ^
      155 |             throw err; // Rethrow the error to the caller
      156 |         }
      157 |     }

      at error (models/incidentPostModel.js:154:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error updating incident post: Error: Database error
          at _callee9$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:175:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      152 |             return updatedRow[0]; // Assuming only one row is returned
      153 |         } catch (err) {
    > 154 |             console.error("Error updating incident post:", err);
          |                     ^
      155 |             throw err; // Rethrow the error to the caller
      156 |         }
      157 |     }

      at error (models/incidentPostModel.js:154:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.log
      Successfully deleted incident post with ID: 1

      at log (models/incidentPostModel.js:176:25)

    console.warn
      No incident post found with ID: 999

      181 |                 };
      182 |             } else {
    > 183 |                 console.warn(`No incident post found with ID: ${id}`);
          |                         ^
      184 |                 return {
      185 |                     success: false,
      186 |                     message: `No incident post found with ID ${id}.`,

      at warn (models/incidentPostModel.js:183:25)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error deleting incident post: Error: Incident post ID is required for deletion.
          at _callee5$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:163:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Function.apply [as deleteIncidentPost] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:159:36)
          at deleteIncidentPost (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:221:46)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      190 |         } catch (err) {
      191 |             // Improved error handling
    > 192 |             console.error("Error deleting incident post:", err);
          |                     ^
      193 |             return {
      194 |                 success: false,
      195 |                 message: err.message

      at error (models/incidentPostModel.js:192:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at _next (models/incidentPostModel.js:2:1)
      at Function.<anonymous> (models/incidentPostModel.js:2:1)
      at Function.apply [as deleteIncidentPost] (models/incidentPostModel.js:159:36)
      at deleteIncidentPost (tests/unit/incidentPostModel.test.js:221:46)
      at call (tests/unit/incidentPostModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostModel.test.js:2:1)
      at _next (tests/unit/incidentPostModel.test.js:2:1)
      at Object.<anonymous> (tests/unit/incidentPostModel.test.js:2:1)

    console.error
      Error fetching incident posts with images: Error: Database error
          at _callee14$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:279:42)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      253 |             return Array.from(postMap.values());
      254 |         } catch (err) {
    > 255 |             console.error("Error fetching incident posts with images:", err);
          |                     ^
      256 |             throw new Error("Failed to retrieve incident posts");
      257 |         }
      258 |     }

      at error (models/incidentPostModel.js:255:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error fetching incident post by ID: Error: Database error
          at _callee17$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:315:42)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      288 |             return post;
      289 |         } catch (err) {
    > 290 |             console.error("Error fetching incident post by ID:", err);
          |                     ^
      291 |             throw new Error("Failed to retrieve the incident post");
      292 |         }
      293 |     }

      at error (models/incidentPostModel.js:290:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

  ● IncidentPostModel Unit Tests › createIncidentPost › should create a new incident post and return the created post

    Failed to create incident post. Please try again later.

      63 |         } catch (err) {
      64 |             console.error('Error inserting incident post:', err.message);
    > 65 |             throw new Error('Failed to create incident post. Please try again later.');
         |                   ^
      66 |         }              
      67 |     }
      68 |     

      at _callee$ (models/incidentPostModel.js:65:19)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

  ● IncidentPostModel Unit Tests › insertImage › should insert an image successfully

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { json } from 'express';
    > 2 | import { getDatabaseConnection } from '../configurations/dbConfig.js';
        | ^
      3 |
      4 | class IncidentPostModel {
      5 |     static async createIncidentPost(title, details, resource_details, sender_name, sender_status) {

      at _nonIterableRest (models/incidentPostModel.js:2:1)
      at _nonIterableRest (models/incidentPostModel.js:2:1)
      at _slicedToArray (models/incidentPostModel.js:81:72)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

  ● IncidentPostModel Unit Tests › insertImage › should handle database errors gracefully

    Database error

      93 |
      94 |     it("should handle database errors gracefully", async () => {
    > 95 |       mockDb.execute.mockRejectedValueOnce(new Error("Database error"));
         |                                            ^
      96 |       const result = await IncidentPostModel.insertImage(
      97 |         "testuser",
      98 |         1,

      at _callee4$ (tests/unit/incidentPostModel.test.js:95:44)
      at call (tests/unit/incidentPostModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostModel.test.js:2:1)
      at _next (tests/unit/incidentPostModel.test.js:2:1)
      at Object.<anonymous> (tests/unit/incidentPostModel.test.js:2:1)

FAIL tests/unit/messageModel.test.js
  ● Console

    console.error
      Error inserting message: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      40 |             return result;
      41 |         } catch (error) {
    > 42 |             console.error("Error inserting message:", error.message);
         |                     ^
      43 |             throw error;
      44 |         }        
      45 |     }

      at error (models/messageModel.js:42:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error inserting message: Database Error

      40 |             return result;
      41 |         } catch (error) {
    > 42 |             console.error("Error inserting message:", error.message);
         |                     ^
      43 |             throw error;
      44 |         }        
      45 |     }

      at error (models/messageModel.js:42:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error fetching messages: Error: Database Error
          at _callee4$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:52:52)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      143 |             return rows;
      144 |         } catch (error) {
    > 145 |             console.error('Error fetching messages:', error);
          |                     ^
      146 |             throw error;
      147 |         }
      148 |     }

      at error (models/messageModel.js:145:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error inserting private message: TypeError: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at _slicedToArray (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:202:85)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/messageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      230 |             return result;
      231 |         } catch (error) {
    > 232 |             console.error('Error inserting private message:', error);
          |                     ^
      233 |             throw error;
      234 |         }
      235 |     }

      at error (models/messageModel.js:232:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error inserting private message: Error: Database Error
          at _callee6$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:76:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      230 |             return result;
      231 |         } catch (error) {
    > 232 |             console.error('Error inserting private message:', error);
          |                     ^
      233 |             throw error;
      234 |         }
      235 |     }

      at error (models/messageModel.js:232:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error fetching private messages: Error: Database Error
          at _callee8$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:96:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      308 |             return rows;
      309 |         } catch (error) {
    > 310 |             console.error('Error fetching private messages:', error);
          |                     ^
      311 |             throw error;
      312 |         }
      313 |     }

      at error (models/messageModel.js:310:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error fetching unread messages: Error: Database Error
          at _callee10$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:116:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      333 |             return rows.map(row => row.message_sender);
      334 |         } catch (error) {
    > 335 |             console.error('Error fetching unread messages:', error);
          |                     ^
      336 |             throw error;
      337 |         }
      338 |     }

      at error (models/messageModel.js:335:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error fetching unread messages: Error: Database Error
          at _callee12$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:134:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      359 |             return rows;
      360 |         } catch (error) {
    > 361 |             console.error('Error fetching unread messages:', error);
          |                     ^
      362 |             throw error;
      363 |         }
      364 |     }

      at error (models/messageModel.js:361:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

    console.error
      Error updating messages to read: Error: Database Error
          at _callee14$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:154:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/messageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      376 |             return result;
      377 |         } catch (error) {
    > 378 |             console.error('Error updating messages to read:', error);
          |                     ^
      379 |             throw error;
      380 |         }
      381 |     }

      at error (models/messageModel.js:378:21)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as throw] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● MessageModel › createMessage › should create a public message successfully

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { getDatabaseConnection } from '../configurations/dbConfig.js';
    > 2 |
        | ^
      3 | class MessageModel {
      4 |     // Existing method to create a public message
      5 |     static async createMessage(messageText, sender, status, timestamp, conversationId) {

      at _nonIterableRest (models/messageModel.js:2:1)
      at _nonIterableRest (models/messageModel.js:2:1)
      at _slicedToArray (models/messageModel.js:16:87)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● MessageModel › createPrivateMessage › should create a private message successfully

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { getDatabaseConnection } from '../configurations/dbConfig.js';
    > 2 |
        | ^
      3 | class MessageModel {
      4 |     // Existing method to create a public message
      5 |     static async createMessage(messageText, sender, status, timestamp, conversationId) {

      at _nonIterableRest (models/messageModel.js:2:1)
      at _nonIterableRest (models/messageModel.js:2:1)
      at _slicedToArray (models/messageModel.js:202:85)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

FAIL tests/unit/reviewModel.test.js
  ● Console

    console.error
      Error fetching reviews: Error: Database Error
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:44:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/reviewModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      21 |             return rows;
      22 |         } catch (error) {
    > 23 |             console.error("Error fetching reviews:", error);
         |                     ^
      24 |             throw error;
      25 |         }
      26 |     }

      at error (models/reviewModel.js:23:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as throw] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error adding review: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      62 |             return result;
      63 |         } catch (error) {
    > 64 |             console.error("Error adding review:", error.message);
         |                     ^
      65 |             throw error;
      66 |         }        
      67 |     }

      at error (models/reviewModel.js:64:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error adding review: Database Error

      62 |             return result;
      63 |         } catch (error) {
    > 64 |             console.error("Error adding review:", error.message);
         |                     ^
      65 |             throw error;
      66 |         }        
      67 |     }

      at error (models/reviewModel.js:64:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as throw] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error adding review: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      62 |             return result;
      63 |         } catch (error) {
    > 64 |             console.error("Error adding review:", error.message);
         |                     ^
      65 |             throw error;
      66 |         }        
      67 |     }

      at error (models/reviewModel.js:64:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

    console.error
      Error adding review: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      62 |             return result;
      63 |         } catch (error) {
    > 64 |             console.error("Error adding review:", error.message);
         |                     ^
      65 |             throw error;
      66 |         }        
      67 |     }

      at error (models/reviewModel.js:64:21)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

  ● ReviewModel › getReviewsByResourceId › should fetch reviews by resource ID successfully (positive)

    expect(received).toBe(expected) // Object.is equality

    Expected: "SELECT reviewer_name, review_content, upvote_downvote, created_at FROM resource_reviews WHERE resource_id = ? ORDER BY created_at DESC"
    Received: "SELECT u.user_name AS reviewer_name, rr.review_content, rr.upvote_downvote, rr.created_at FROM resource_reviews rr JOIN user u ON rr.reviewer_id = u.id WHERE rr.resource_id = ? AND u.account_status = 'active' ORDER BY rr.created_at DESC;"

      36 |             `;
      37 |             const normalizeQuery = (query) => query.replace(/\s+/g, " ").trim();
    > 38 |             expect(normalizeQuery(mockConnection.execute.mock.calls[0][0])).toBe(normalizeQuery(expectedQuery));
         |                                                                             ^
      39 |             expect(mockConnection.execute.mock.calls[0][1]).toEqual([1]);
      40 |             expect(result).toEqual(reviews);
      41 |         });

      at toBe (tests/unit/reviewModel.test.js:38:77)
      at call (tests/unit/reviewModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/reviewModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/reviewModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/reviewModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/reviewModel.test.js:2:1)

  ● ReviewModel › addReview › should add a new review successfully (positive)

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { getDatabaseConnection } from "../configurations/dbConfig.js";
    > 2 |
        | ^
      3 | class ReviewModel {
      4 |     // Fetch reviews by resource ID
      5 |     static async getReviewsByResourceId(resourceId) {

      at _nonIterableRest (models/reviewModel.js:2:1)
      at _nonIterableRest (models/reviewModel.js:2:1)
      at _slicedToArray (models/reviewModel.js:40:91)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

FAIL tests/unit/incidentPostMessageModel.test.js
  ● Console

    console.error
      Error creating incident message: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      58 |             return rows[0];
      59 |         } catch (err) {
    > 60 |             console.error("Error creating incident message:", err.message);
         |                     ^
      61 |             throw new Error("An error occurred while creating the incident message");
      62 |         }        
      63 |     }

      at error (models/incidentPostMessageModel.js:60:21)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

    console.error
      Error creating incident message: Database error

      58 |             return rows[0];
      59 |         } catch (err) {
    > 60 |             console.error("Error creating incident message:", err.message);
         |                     ^
      61 |             throw new Error("An error occurred while creating the incident message");
      62 |         }        
      63 |     }

      at error (models/incidentPostMessageModel.js:60:21)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

    console.error
      Error fetching incident post messages: Error: Database error
          at _callee4$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:103:40)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/incidentPostMessageModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      87 |                 throw err;
      88 |             }
    > 89 |             console.error("Error fetching incident post messages:", err);
         |                     ^
      90 |             throw new Error("An error occurred while fetching incident messages");
      91 |         }
      92 |     }

      at error (models/incidentPostMessageModel.js:89:21)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

  ● IncidentPostMessageModel Unit Tests › createIncidentPostMessageByincidentID › should create a new incident message and return the inserted record

    An error occurred while creating the incident message

      59 |         } catch (err) {
      60 |             console.error("Error creating incident message:", err.message);
    > 61 |             throw new Error("An error occurred while creating the incident message");
         |                   ^
      62 |         }        
      63 |     }
      64 |

      at _callee$ (models/incidentPostMessageModel.js:61:19)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

  ● IncidentPostMessageModel Unit Tests › createIncidentPostMessageByincidentID › should throw an error if the INSERT query fails

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      61 |       ).rejects.toThrow("An error occurred while creating the incident message");
      62 |
    > 63 |       expect(mockDb.execute).toHaveBeenCalledTimes(1);
         |                              ^
      64 |     });
      65 |   });
      66 |

      at toHaveBeenCalledTimes (tests/unit/incidentPostMessageModel.test.js:63:30)
      at call (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)

  ● IncidentPostMessageModel Unit Tests › getIncidentPostMessagesByincidentID › should fetch all messages for a given incident post ID

    expect(received).toEqual(expected) // deep equality

    - Expected  -  3
    + Received  + 12

      Array [
    -   "SELECT id, text, sent_time, sender_name, sender_status, incidentPost_id
    -                  FROM incidentMessage
    -                  WHERE incidentPost_id = ?;",
    +   "
    +                     SELECT im.id,
    +                         im.text,
    +                         im.sent_time,
    +                         u.user_name AS sender_name,
    +                         u.status AS sender_status,
    +                         im.incidentPost_id
    +                     FROM incidentMessage im
    +                     JOIN user u ON im.sender_id = u.id
    +                     WHERE im.incidentPost_id = ?
    +                     AND u.account_status = 'active';
    +                  ",
        Array [
          1,
        ],
      ]

      91 |
      92 |       expect(mockDb.execute).toHaveBeenCalledTimes(1);
    > 93 |       expect(mockDb.execute.mock.calls[0]).toEqual([
         |                                            ^
      94 |         `SELECT id, text, sent_time, sender_name, sender_status, incidentPost_id
      95 |                  FROM incidentMessage
      96 |                  WHERE incidentPost_id = ?;`,

      at toEqual (tests/unit/incidentPostMessageModel.test.js:93:44)
      at call (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)

FAIL tests/integration/emergencyContactController.test.js (6.793 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:179:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      218 |             return results;
      219 |         } catch (err) {
    > 220 |             console.error("Error executing query", err.stack);
          |                     ^
      221 |             throw err;
      222 |         }
      223 |     }

      at error (models/emergencyContactModel.js:220:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.error
      Error in sending connect request:  Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:179:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT id\n' +
          '            FROM user\n' +
          '            WHERE user_name = ?\n' +
          "            AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      104 |             });
      105 |         } catch (err) {
    > 106 |             console.error("Error in sending connect request: ", err);
          |                     ^
      107 |             res.status(500).json({ message: "Internal Server Error" });
      108 |         }
      109 |     }

      at error (controllers/emergencyContactController.js:106:21)
      at call (controllers/emergencyContactController.js:2:1)
      at Generator.tryCatch (controllers/emergencyContactController.js:2:1)
      at Generator._invoke [as throw] (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)

    console.error
      Error in sending connect request:  Error: Database error
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:110:23)
          at /Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:397:39
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:404:13)
          at Function.mockConstructor (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:148:19)
          at insertPendingRequest (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:60:41)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at Function.apply [as sendConnectRequest] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:56:36)
          at sendConnectRequest (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:113:46)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      104 |             });
      105 |         } catch (err) {
    > 106 |             console.error("Error in sending connect request: ", err);
          |                     ^
      107 |             res.status(500).json({ message: "Internal Server Error" });
      108 |         }
      109 |     }

      at error (controllers/emergencyContactController.js:106:21)
      at call (controllers/emergencyContactController.js:2:1)
      at Generator.tryCatch (controllers/emergencyContactController.js:2:1)
      at Generator._invoke [as next] (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)
      at _next (controllers/emergencyContactController.js:2:1)
      at Function.<anonymous> (controllers/emergencyContactController.js:2:1)
      at Function.apply [as sendConnectRequest] (controllers/emergencyContactController.js:56:36)
      at sendConnectRequest (tests/integration/emergencyContactController.test.js:113:46)
      at call (tests/integration/emergencyContactController.test.js:2:1)
      at Generator.tryCatch (tests/integration/emergencyContactController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at _next (tests/integration/emergencyContactController.test.js:2:1)
      at Object.<anonymous> (tests/integration/emergencyContactController.test.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:251:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      295 |             // return results;
      296 |         } catch (err) {
    > 297 |             console.error("Error executing query", err.stack);
          |                     ^
      298 |             throw err;
      299 |         }
      300 |     }

      at error (models/emergencyContactModel.js:297:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.error
      Error in accepting connect request:  Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:251:50)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT id\n' +
          '                FROM user\n' +
          '                WHERE user_name = ?\n' +
          "                AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      161 |             });
      162 |         } catch (err) {
    > 163 |             console.error("Error in accepting connect request: ", err);
          |                     ^
      164 |             res.status(500).json({ message: "Internal Server Error" });
      165 |         }
      166 |     }

      at error (controllers/emergencyContactController.js:163:21)
      at call (controllers/emergencyContactController.js:2:1)
      at Generator.tryCatch (controllers/emergencyContactController.js:2:1)
      at Generator._invoke [as throw] (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)

    console.error
      Error in sharing resource:  Error: Database error
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:275:23)
          at /Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:397:39
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:404:13)
          at Function.mockConstructor (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:148:19)
          at updateResource (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:237:41)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at new Promise (<anonymous>)
          at Function.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:2:1)
          at Function.apply [as shareResource] (/Users/shangchienliu/Desktop/f24-fse-sb2/controllers/emergencyContactController.js:233:31)
          at shareResource (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:278:46)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/integration/emergencyContactController.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      257 |             res.status(200).json({ message: "Resource shared successfully" });
      258 |         } catch (err) {
    > 259 |             console.error("Error in sharing resource: ", err);
          |                     ^
      260 |             res.status(500).json({ message: "Internal Server Error" });
      261 |         }
      262 |     }

      at error (controllers/emergencyContactController.js:259:21)
      at call (controllers/emergencyContactController.js:2:1)
      at Generator.tryCatch (controllers/emergencyContactController.js:2:1)
      at Generator._invoke [as next] (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)
      at asyncGeneratorStep (controllers/emergencyContactController.js:2:1)
      at _next (controllers/emergencyContactController.js:2:1)
      at Function.<anonymous> (controllers/emergencyContactController.js:2:1)
      at Function.apply [as shareResource] (controllers/emergencyContactController.js:233:31)
      at shareResource (tests/integration/emergencyContactController.test.js:278:46)
      at call (tests/integration/emergencyContactController.test.js:2:1)
      at Generator.tryCatch (tests/integration/emergencyContactController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at _next (tests/integration/emergencyContactController.test.js:2:1)
      at Object.<anonymous> (tests/integration/emergencyContactController.test.js:2:1)

  ● EmergencyContactController Integration Test › sendConnectRequest › should send a connect request from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      76 |             await EmergencyContactController.sendConnectRequest(req, res);
      77 |
    > 78 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      79 |             expect(res.json).toHaveBeenCalledWith(
      80 |                 expect.objectContaining({
      81 |                     message: "Connect request sent successfully",

      at toHaveBeenCalledWith (tests/integration/emergencyContactController.test.js:78:32)
      at call (tests/integration/emergencyContactController.test.js:2:1)
      at Generator.tryCatch (tests/integration/emergencyContactController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)

  ● EmergencyContactController Integration Test › acceptConnectRequest › should accept a connect request from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      145 |             await EmergencyContactController.acceptConnectRequest(req, res);
      146 |
    > 147 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      148 |             expect(res.json).toHaveBeenCalledWith(
      149 |                 expect.objectContaining({
      150 |                     message: "Connect request accepted successfully",

      at toHaveBeenCalledWith (tests/integration/emergencyContactController.test.js:147:32)
      at call (tests/integration/emergencyContactController.test.js:2:1)
      at Generator.tryCatch (tests/integration/emergencyContactController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)

FAIL tests/integration/resourceController.test.js (6.925 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error executing query Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      32 |             return rows[0];
      33 |         } catch (err) {
    > 34 |             console.error("Error executing query", err.stack);
         |                     ^
      35 |             throw err;
      36 |         }
      37 |     }

      at error (models/resourceModel.js:34:21)
      at call (models/resourceModel.js:2:1)
      at Generator.tryCatch (models/resourceModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)

    console.error
      Error fetching user resources: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rm.*\n' +
          '            FROM resource_management rm\n' +
          '            JOIN user u ON rm.user_id = u.id\n' +
          '            WHERE u.user_name = ?\n' +
          "            AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      26 |             return res.status(200).json(resources);
      27 |         } catch (err) {
    > 28 |             console.error("Error fetching user resources:", err);
         |                     ^
      29 |             return res.status(500).json({ message: "Internal Server Error" });
      30 |         }
      31 |     }

      at error (controllers/resourceController.js:28:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      32 |             return rows[0];
      33 |         } catch (err) {
    > 34 |             console.error("Error executing query", err.stack);
         |                     ^
      35 |             throw err;
      36 |         }
      37 |     }

      at error (models/resourceModel.js:34:21)
      at call (models/resourceModel.js:2:1)
      at Generator.tryCatch (models/resourceModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)

    console.error
      Error fetching user resources: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rm.*\n' +
          '            FROM resource_management rm\n' +
          '            JOIN user u ON rm.user_id = u.id\n' +
          '            WHERE u.user_name = ?\n' +
          "            AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      26 |             return res.status(200).json(resources);
      27 |         } catch (err) {
    > 28 |             console.error("Error fetching user resources:", err);
         |                     ^
      29 |             return res.status(500).json({ message: "Internal Server Error" });
      30 |         }
      31 |     }

      at error (controllers/resourceController.js:28:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.log
      No resource profile found for username: nonexistentuser

      at log (models/resourceModel.js:115:25)

    console.error
      Error executing query Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      32 |             return rows[0];
      33 |         } catch (err) {
    > 34 |             console.error("Error executing query", err.stack);
         |                     ^
      35 |             throw err;
      36 |         }
      37 |     }

      at error (models/resourceModel.js:34:21)
      at call (models/resourceModel.js:2:1)
      at Generator.tryCatch (models/resourceModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)

    console.error
      Error creating resource request: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rm.*\n' +
          '            FROM resource_management rm\n' +
          '            JOIN user u ON rm.user_id = u.id\n' +
          '            WHERE u.user_name = ?\n' +
          "            AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      116 |             });
      117 |         } catch (err) {
    > 118 |             console.error("Error creating resource request:", err);
          |                     ^
      119 |             return res.status(500).json({ message: "Internal Server Error" });
      120 |         }
      121 |     }

      at error (controllers/resourceController.js:118:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      32 |             return rows[0];
      33 |         } catch (err) {
    > 34 |             console.error("Error executing query", err.stack);
         |                     ^
      35 |             throw err;
      36 |         }
      37 |     }

      at error (models/resourceModel.js:34:21)
      at call (models/resourceModel.js:2:1)
      at Generator.tryCatch (models/resourceModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)

    console.error
      Error creating resource request: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rm.*\n' +
          '            FROM resource_management rm\n' +
          '            JOIN user u ON rm.user_id = u.id\n' +
          '            WHERE u.user_name = ?\n' +
          "            AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      116 |             });
      117 |         } catch (err) {
    > 118 |             console.error("Error creating resource request:", err);
          |                     ^
      119 |             return res.status(500).json({ message: "Internal Server Error" });
      120 |         }
      121 |     }

      at error (controllers/resourceController.js:118:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      32 |             return rows[0];
      33 |         } catch (err) {
    > 34 |             console.error("Error executing query", err.stack);
         |                     ^
      35 |             throw err;
      36 |         }
      37 |     }

      at error (models/resourceModel.js:34:21)
      at call (models/resourceModel.js:2:1)
      at Generator.tryCatch (models/resourceModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)
      at asyncGeneratorStep (models/resourceModel.js:2:1)

    console.error
      Error creating resource request: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:25:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rm.*\n' +
          '            FROM resource_management rm\n' +
          '            JOIN user u ON rm.user_id = u.id\n' +
          '            WHERE u.user_name = ?\n' +
          "            AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      116 |             });
      117 |         } catch (err) {
    > 118 |             console.error("Error creating resource request:", err);
          |                     ^
      119 |             return res.status(500).json({ message: "Internal Server Error" });
      120 |         }
      121 |     }

      at error (controllers/resourceController.js:118:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error retrieving requests by requester username Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:90:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      91 |             return rows;
      92 |         } catch (err) {
    > 93 |             console.error("Error retrieving requests by requester username", err.stack);
         |                     ^
      94 |             throw err;
      95 |         }
      96 |     }

      at error (models/resourceRequestModel.js:93:21)
      at call (models/resourceRequestModel.js:2:1)
      at Generator.tryCatch (models/resourceRequestModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)

    console.error
      Error retrieving sent requests: Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:90:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT rr.*\n' +
          '                FROM resource_requests rr\n' +
          '                JOIN user u_requester ON rr.requester_id = u_requester.id\n' +
          '                JOIN user u_requested ON rr.requested_from_id = u_requested.id\n' +
          '                WHERE u_requester.user_name = ?\n' +
          "                AND u_requester.account_status = 'active'\n" +
          "                AND u_requested.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u_requester.account_status' in 'where clause'"
      }

      141 |             return res.status(200).json(sentRequests);
      142 |         } catch (err) {
    > 143 |             console.error("Error retrieving sent requests:", err);
          |                     ^
      144 |             return res.status(500).json({ message: "Internal Server Error" });
      145 |         }
      146 |     }

      at error (controllers/resourceController.js:143:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error retrieving requests by requester username Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:90:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      91 |             return rows;
      92 |         } catch (err) {
    > 93 |             console.error("Error retrieving requests by requester username", err.stack);
         |                     ^
      94 |             throw err;
      95 |         }
      96 |     }

      at error (models/resourceRequestModel.js:93:21)
      at call (models/resourceRequestModel.js:2:1)
      at Generator.tryCatch (models/resourceRequestModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)

    console.error
      Error retrieving sent requests: Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:90:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT rr.*\n' +
          '                FROM resource_requests rr\n' +
          '                JOIN user u_requester ON rr.requester_id = u_requester.id\n' +
          '                JOIN user u_requested ON rr.requested_from_id = u_requested.id\n' +
          '                WHERE u_requester.user_name = ?\n' +
          "                AND u_requester.account_status = 'active'\n" +
          "                AND u_requested.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u_requester.account_status' in 'where clause'"
      }

      141 |             return res.status(200).json(sentRequests);
      142 |         } catch (err) {
    > 143 |             console.error("Error retrieving sent requests:", err);
          |                     ^
      144 |             return res.status(500).json({ message: "Internal Server Error" });
      145 |         }
      146 |     }

      at error (controllers/resourceController.js:143:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error retrieving resource request Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:133:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      140 |             return rows[0];
      141 |         } catch (err) {
    > 142 |             console.error("Error retrieving resource request", err.stack);
          |                     ^
      143 |             throw err;
      144 |         }
      145 |     }

      at error (models/resourceRequestModel.js:142:21)
      at call (models/resourceRequestModel.js:2:1)
      at Generator.tryCatch (models/resourceRequestModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)

    console.error
      Error approving request: Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:133:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rr.*\n' +
          '            FROM resource_requests rr\n' +
          '            JOIN user u_requester ON rr.requester_id = u_requester.id\n' +
          '            JOIN user u_requested ON rr.requested_from_id = u_requested.id\n' +
          '            WHERE rr.request_id = ?\n' +
          "            AND u_requester.account_status = 'active'\n" +
          "            AND u_requested.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u_requester.account_status' in 'where clause'"
      }

      263 |             res.status(200).json({ message: "Request approved and resources updated" });
      264 |         } catch (err) {
    > 265 |             console.error("Error approving request:", err);
          |                     ^
      266 |             res.status(500).json({ message: "Internal Server Error" });
      267 |         }
      268 |     }

      at error (controllers/resourceController.js:265:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

    console.error
      Error retrieving resource request Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:133:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      140 |             return rows[0];
      141 |         } catch (err) {
    > 142 |             console.error("Error retrieving resource request", err.stack);
          |                     ^
      143 |             throw err;
      144 |         }
      145 |     }

      at error (models/resourceRequestModel.js:142:21)
      at call (models/resourceRequestModel.js:2:1)
      at Generator.tryCatch (models/resourceRequestModel.js:2:1)
      at Generator._invoke [as throw] (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)
      at asyncGeneratorStep (models/resourceRequestModel.js:2:1)

    console.error
      Error approving request: Error: Unknown column 'u_requester.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:133:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/resourceRequestModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT rr.*\n' +
          '            FROM resource_requests rr\n' +
          '            JOIN user u_requester ON rr.requester_id = u_requester.id\n' +
          '            JOIN user u_requested ON rr.requested_from_id = u_requested.id\n' +
          '            WHERE rr.request_id = ?\n' +
          "            AND u_requester.account_status = 'active'\n" +
          "            AND u_requested.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u_requester.account_status' in 'where clause'"
      }

      263 |             res.status(200).json({ message: "Request approved and resources updated" });
      264 |         } catch (err) {
    > 265 |             console.error("Error approving request:", err);
          |                     ^
      266 |             res.status(500).json({ message: "Internal Server Error" });
      267 |         }
      268 |     }

      at error (controllers/resourceController.js:265:21)
      at call (controllers/resourceController.js:2:1)
      at Generator.tryCatch (controllers/resourceController.js:2:1)
      at Generator._invoke [as throw] (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)
      at asyncGeneratorStep (controllers/resourceController.js:2:1)

  ● ResourceController Integration Tests › getUserResources › should fetch the resources for a specific user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      57 |             await ResourceController.getUserResources(req, res);
      58 |
    > 59 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      60 |             expect(res.json).toHaveBeenCalledWith({
      61 |                 username: 'testUser1',
      62 |                 water: 10,

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:59:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › getUserResources › should return 404 if the user is not found

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      75 |             await ResourceController.getUserResources(req, res);
      76 |
    > 77 |             expect(res.status).toHaveBeenCalledWith(404);
         |                                ^
      78 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      79 |                 error: 'User resources not found',
      80 |             }));

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:77:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › createResourceRequest › should create a new resource request from user1 to user2

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      163 |             await ResourceController.createResourceRequest(req, res);
      164 |
    > 165 |             expect(res.status).toHaveBeenCalledWith(201);
          |                                ^
      166 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      167 |                 message: 'Resource request created successfully',
      168 |                 request: expect.any(Object),

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:165:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › createResourceRequest › should return 404 if requested user does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      194 |             await ResourceController.createResourceRequest(req, res);
      195 |         
    > 196 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      197 |             expect(res.json).toHaveBeenCalledWith({
      198 |                 error: 'Requested user not found or has no resources available.',
      199 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:196:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › createResourceRequest › should return 400 if the requested quantity exceeds available amount of user2

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 500

    Number of calls: 1

      239 |             await ResourceController.createResourceRequest(req, res);
      240 |
    > 241 |             expect(res.status).toHaveBeenCalledWith(400);
          |                                ^
      242 |             expect(res.json).toHaveBeenCalledWith({
      243 |                 error: 'Requested quantity exceeds available amount.',
      244 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:241:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › getAllSentRequests › should fetch all requests sent by a user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      266 |             await ResourceController.getAllSentRequests(req, res);
      267 |     
    > 268 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      269 |             expect(res.json).toHaveBeenCalledWith(expect.arrayContaining([
      270 |                 expect.objectContaining({
      271 |                     requester_username: 'testUser1',

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:268:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › getAllSentRequests › should return 404 if no sent requests found for this user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      300 |             await ResourceController.getAllSentRequests(req, res);
      301 |     
    > 302 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      303 |             expect(res.json).toHaveBeenCalledWith({
      304 |                 message: 'No sent requests found for this user',
      305 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:302:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › approveRequest › should approve a request and update resources for both users

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      332 |             await ResourceController.approveRequest(req, res);
      333 |     
    > 334 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      335 |             expect(res.json).toHaveBeenCalledWith({
      336 |                 message: 'Request approved and resources updated',
      337 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:334:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › approveRequest › should return 404 if the request does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      364 |             await ResourceController.approveRequest(req, res);
      365 |     
    > 366 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      367 |             expect(res.json).toHaveBeenCalledWith({
      368 |                 error: 'Request not found',
      369 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:366:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

PASS tests/unit/userModel.test.js
  ● Console

    console.log
      getUserByUsername: No user found with username: nonExistentUser

      at log (models/userModel.js:40:25)

    console.error
      Error executing query Error: Database Error
          at _callee3$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:53:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error executing query: Database Error

      304 |             return { id: userId, username: this.username };
      305 |         } catch (err) {
    > 306 |             console.error("Error executing query:", err.message);
          |                     ^
      307 |             throw err;
      308 |         }
      309 |     }

      at UserModel.error (models/userModel.js:306:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.log
      User validated: { user_password: 'hashedPassword' }

      at log (models/userModel.js:333:21)

    console.log
      Invalid password for user: testUser

      at log (models/userModel.js:330:25)

    console.log
      validatePassword: No user found with username: nonExistentUser

      at log (models/userModel.js:319:25)

    console.error
      Error executing query Error: Database Error
          at _callee10$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:122:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      334 |             return user;
      335 |         } catch (err) {
    > 336 |             console.error("Error executing query", err.stack);
          |                     ^
      337 |             throw err;
      338 |         }
      339 |     }

      at error (models/userModel.js:336:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error executing query Error: Database Error
          at _callee12$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:139:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      350 |             return result;
      351 |         } catch (err) {
    > 352 |             console.error("Error executing query", err.stack);
          |                     ^
      353 |             throw err;
      354 |         }
      355 |     }

      at error (models/userModel.js:352:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error executing query Error: Database Error
          at _callee14$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:158:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      368 |             return result;
      369 |         } catch (err) {
    > 370 |             console.error("Error executing query", err.stack);
          |                     ^
      371 |             throw err;
      372 |         }
      373 |     }

      at error (models/userModel.js:370:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching all users Error: Database Error
          at _callee16$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:176:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      386 |             return rows; // Return the array of users
      387 |         } catch (err) {
    > 388 |             console.error("Error fetching all users", err.stack);
          |                     ^
      389 |             throw err;
      390 |         }
      391 |     }

      at error (models/userModel.js:388:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error updating citizen status Error: Database Error
          at _callee18$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:195:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/userModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      423 |             return result;
      424 |         } catch (err) {
    > 425 |             console.error("Error updating citizen status", err.stack);
          |                     ^
      426 |             throw err;
      427 |         }
      428 |     }

      at error (models/userModel.js:425:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

FAIL tests/integration/messageController.test.js (6.927 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error sending private message: Unknown column 'account_status' in 'where clause'

      155 |             });
      156 |         } catch (error) {
    > 157 |             console.error("Error sending private message:", error.message);
          |                     ^
      158 |             res.status(500).json({
      159 |                 message: "Error sending private message",
      160 |                 error: error.message,

      at error (controllers/messageController.js:157:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error sending private message: Unknown column 'account_status' in 'where clause'

      155 |             });
      156 |         } catch (error) {
    > 157 |             console.error("Error sending private message:", error.message);
          |                     ^
      158 |             res.status(500).json({
      159 |                 message: "Error sending private message",
      160 |                 error: error.message,

      at error (controllers/messageController.js:157:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching private messages: Unknown column 'account_status' in 'where clause'

      194 |             res.status(200).json(messages);
      195 |         } catch (error) {
    > 196 |             console.error("Error fetching private messages:", error.message);
          |                     ^
      197 |             res.status(500).json({
      198 |                 message: "Error fetching private messages",
      199 |                 error: error.message,

      at error (controllers/messageController.js:196:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching private messages: Unknown column 'account_status' in 'where clause'

      194 |             res.status(200).json(messages);
      195 |         } catch (error) {
    > 196 |             console.error("Error fetching private messages:", error.message);
          |                     ^
      197 |             res.status(500).json({
      198 |                 message: "Error fetching private messages",
      199 |                 error: error.message,

      at error (controllers/messageController.js:196:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching private messages: Unknown column 'account_status' in 'where clause'

      194 |             res.status(200).json(messages);
      195 |         } catch (error) {
    > 196 |             console.error("Error fetching private messages:", error.message);
          |                     ^
      197 |             res.status(500).json({
      198 |                 message: "Error fetching private messages",
      199 |                 error: error.message,

      at error (controllers/messageController.js:196:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.log
      Controller: recipient: testA sender: testB

      at log (controllers/messageController.js:226:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching unread messages: Unknown column 'account_status' in 'where clause'

      252 |             res.status(200).json(unreadMessages);
      253 |         } catch (error) {
    > 254 |             console.error("Error fetching unread messages:", error.message);
          |                     ^
      255 |             res.status(500).json({
      256 |                 message: "Error fetching unread messages",
      257 |                 error: error.message,

      at error (controllers/messageController.js:254:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.log
      Controller: recipient: testA sender: testB

      at log (controllers/messageController.js:226:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching unread messages: Unknown column 'account_status' in 'where clause'

      252 |             res.status(200).json(unreadMessages);
      253 |         } catch (error) {
    > 254 |             console.error("Error fetching unread messages:", error.message);
          |                     ^
      255 |             res.status(500).json({
      256 |                 message: "Error fetching unread messages",
      257 |                 error: error.message,

      at error (controllers/messageController.js:254:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.log
      Controller: recipient: nonExistentUser sender: testB

      at log (controllers/messageController.js:226:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching unread messages: Unknown column 'account_status' in 'where clause'

      252 |             res.status(200).json(unreadMessages);
      253 |         } catch (error) {
    > 254 |             console.error("Error fetching unread messages:", error.message);
          |                     ^
      255 |             res.status(500).json({
      256 |                 message: "Error fetching unread messages",
      257 |                 error: error.message,

      at error (controllers/messageController.js:254:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error marking messages as read: Unknown column 'account_status' in 'where clause'

      290 |             });
      291 |         } catch (error) {
    > 292 |             console.error("Error marking messages as read:", error.message);
          |                     ^
      293 |             res.status(500).json({
      294 |                 message: "Error marking messages as read",
      295 |                 error: error.message,

      at error (controllers/messageController.js:292:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error marking messages as read: Unknown column 'account_status' in 'where clause'

      290 |             });
      291 |         } catch (error) {
    > 292 |             console.error("Error marking messages as read:", error.message);
          |                     ^
      293 |             res.status(500).json({
      294 |                 message: "Error marking messages as read",
      295 |                 error: error.message,

      at error (controllers/messageController.js:292:21)
      at call (controllers/messageController.js:2:1)
      at Generator.tryCatch (controllers/messageController.js:2:1)
      at Generator._invoke [as throw] (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)
      at asyncGeneratorStep (controllers/messageController.js:2:1)

  ● MessageController Integration Test › sendPrivateMessage › should send multiple private messages from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      68 |
      69 |                 // Verify the response
    > 70 |                 expect(res.status).toHaveBeenCalledWith(200);
         |                                    ^
      71 |                 expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      72 |                     message: 'Private message sent successfully',
      73 |                     result: expect.any(Object)

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:70:36)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when sending a message to a non-existent recipient

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      109 |
      110 |             // Verify the response
    > 111 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      112 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      113 |                 error: 'Sender or recipient not found.'
      114 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:111:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › getPrivateMessages › should retrieve private messages between testA and testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      201 |
      202 |             // Verify the response
    > 203 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      204 |             expect(res.json).toHaveBeenCalledWith(expect.any(Array));
      205 |
      206 |             // Verify that the messages include the ones we sent earlier

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:203:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should return an empty array when there are no messages between users

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      238 |
      239 |             // Verify the response
    > 240 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      241 |             expect(res.json).toHaveBeenCalledWith([]);
      242 |         });
      243 |

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:240:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when recipient does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      258 |
      259 |             // Verify the response
    > 260 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      261 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      262 |                 error: 'Sender or recipient not found.'
      263 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:260:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › getUnreadMessages › should retrieve unread messages from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      290 |
      291 |             // Verify the response
    > 292 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      293 |             const unreadMessages = res.json.mock.calls[0][0];
      294 |             expect(Array.isArray(unreadMessages)).toBe(true);
      295 |             expect(unreadMessages.length).toBeGreaterThan(0);

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:292:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should return an empty array when there are no unread messages

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      330 |
      331 |             // Verify the response
    > 332 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      333 |             const unreadMessages = res.json.mock.calls[0][0];
      334 |             expect(Array.isArray(unreadMessages)).toBe(true);
      335 |             expect(unreadMessages.length).toBe(0);

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:332:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when recipient does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      351 |
      352 |             // Verify the response
    > 353 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      354 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      355 |                 error: 'Sender or recipient not found.'
      356 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:353:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › markMessagesAsRead › should mark messages as read between testA and testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      383 |
      384 |             // Verify the response
    > 385 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      386 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      387 |                 message: 'Messages marked as read',
      388 |                 result: expect.any(Object)

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:385:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when recipient does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      415 |
      416 |             // Verify the response
    > 417 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      418 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      419 |                 error: 'Recipient or user not found'
      420 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:417:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

PASS tests/unit/emergencyContactModel.test.js
  ● Console

    console.log
      Added Emergency Contacts: [ { id: 2, username: 'user1' }, { id: 3, username: 'user2' } ]

      at log (models/emergencyContactModel.js:26:21)

    console.error
      Error executing query Error: Database Error
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:62:17)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      27 |             return addedContacts;
      28 |         } catch (err) {
    > 29 |             console.error("Error executing query", err.stack);
         |                     ^
      30 |             throw err;
      31 |         }
      32 |     }

      at error (models/emergencyContactModel.js:29:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.log
      Incoming Pending Emergency Contacts: [ { id: 1, username: 'User1' }, { id: 2, username: 'User2' } ]

      at log (models/emergencyContactModel.js:120:21)

    console.error
      Error executing query Error: Database Error
          at _callee4$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:112:17)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      27 |             return addedContacts;
      28 |         } catch (err) {
    > 29 |             console.error("Error executing query", err.stack);
         |                     ^
      30 |             throw err;
      31 |         }
      32 |     }

      at error (models/emergencyContactModel.js:29:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.log
      Added Emergency Contacts: [ { id: 1, username: 'user1' } ]

      at log (models/emergencyContactModel.js:26:21)

    console.log
      Incoming Pending Emergency Contacts: [ { id: 2, username: 'user2' } ]

      at log (models/emergencyContactModel.js:120:21)

    console.log
      Outgoing Pending Emergency Contacts: [ { id: 3, username: 'user3' } ]

      at log (models/emergencyContactModel.js:153:21)

    console.log
      incomingPendingContacts [ { id: 2, username: 'user2' } ]

      at log (models/emergencyContactModel.js:72:21)

    console.log
      outgoingPendingContacts [ { id: 3, username: 'user3' } ]

      at log (models/emergencyContactModel.js:73:21)

    console.log
      Unadded Users: []

      at log (models/emergencyContactModel.js:89:21)

    console.error
      Error executing query Error: Database Error
          at _callee6$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:173:17)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      91 |             return unaddedUsers;
      92 |         } catch (err) {
    > 93 |             console.error("Error executing query", err.stack);
         |                     ^
      94 |             throw err;
      95 |         }
      96 |     }

      at error (models/emergencyContactModel.js:93:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.log
      Owner ID: 1

      at log (models/emergencyContactModel.js:188:21)

    console.log
      Contact ID: 2

      at log (models/emergencyContactModel.js:208:21)

    console.error
      Error executing query Error: User with username testUser not found
          at _callee5$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:183:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      218 |             return results;
      219 |         } catch (err) {
    > 220 |             console.error("Error executing query", err.stack);
          |                     ^
      221 |             throw err;
      222 |         }
      223 |     }

      at error (models/emergencyContactModel.js:220:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as next] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.log
      Owner ID: 1

      at log (models/emergencyContactModel.js:188:21)

    console.error
      Error executing query Error: User with username user1 not found
          at _callee5$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:203:23)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/emergencyContactModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      218 |             return results;
      219 |         } catch (err) {
    > 220 |             console.error("Error executing query", err.stack);
          |                     ^
      221 |             throw err;
      222 |         }
      223 |     }

      at error (models/emergencyContactModel.js:220:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as next] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.error
      Error executing query Error: Database Error
          at _callee10$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:280:17)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      218 |             return results;
      219 |         } catch (err) {
    > 220 |             console.error("Error executing query", err.stack);
          |                     ^
      221 |             throw err;
      222 |         }
      223 |     }

      at error (models/emergencyContactModel.js:220:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

    console.error
      Error executing query Error: Database Error
          at _callee12$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:318:17)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/emergencyContactModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      323 |             return resources;
      324 |         } catch (err) {
    > 325 |             console.error("Error executing query", err.stack);
          |                     ^
      326 |             throw err;
      327 |         }
      328 |     }

      at error (models/emergencyContactModel.js:325:21)
      at call (models/emergencyContactModel.js:2:1)
      at Generator.tryCatch (models/emergencyContactModel.js:2:1)
      at Generator._invoke [as throw] (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)
      at asyncGeneratorStep (models/emergencyContactModel.js:2:1)

PASS tests/unit/mapResourceModel.test.js
  ● Console

    console.error
      Error fetching resources: Error: Database Error
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:31:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      10 |             return rows;
      11 |         } catch (error) {
    > 12 |             console.error('Error fetching resources:', error);
         |                     ^
      13 |             throw error;
      14 |         }
      15 |     }

      at error (models/mapResourceModel.js:12:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as throw] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

    console.error
      Error adding resource: Error: Database Error
          at _callee4$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:70:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      26 |             return result;
      27 |         } catch (error) {
    > 28 |             console.error('Error adding resource:', error);
         |                     ^
      29 |             throw error;
      30 |         }
      31 |     }

      at error (models/mapResourceModel.js:28:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as throw] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

    console.error
      Error adding resource: TypeError: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _slicedToArray (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:25:104)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      26 |             return result;
      27 |         } catch (error) {
    > 28 |             console.error('Error adding resource:', error);
         |                     ^
      29 |             throw error;
      30 |         }
      31 |     }

      at error (models/mapResourceModel.js:28:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as next] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

    console.error
      Error adding resource: TypeError: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _slicedToArray (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:25:104)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      26 |             return result;
      27 |         } catch (error) {
    > 28 |             console.error('Error adding resource:', error);
         |                     ^
      29 |             throw error;
      30 |         }
      31 |     }

      at error (models/mapResourceModel.js:28:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as next] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

    console.error
      Error updating resource location: Error: Database Error
          at _callee8$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:115:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/mapResourceModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      43 |             return result;
      44 |         } catch (error) {
    > 45 |             console.error('Error updating resource location:', error);
         |                     ^
      46 |             throw error;
      47 |         }
      48 |     }

      at error (models/mapResourceModel.js:45:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as throw] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

    console.error
      Error updating resource location: TypeError: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _slicedToArray (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:42:88)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      43 |             return result;
      44 |         } catch (error) {
    > 45 |             console.error('Error updating resource location:', error);
         |                     ^
      46 |             throw error;
      47 |         }
      48 |     }

      at error (models/mapResourceModel.js:45:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as next] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

    console.error
      Error updating resource location: TypeError: Invalid attempt to destructure non-iterable instance.
      In order to be iterable, non-array objects must have a [Symbol.iterator]() method.
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _nonIterableRest (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at _slicedToArray (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:42:88)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/mapResourceModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      43 |             return result;
      44 |         } catch (error) {
    > 45 |             console.error('Error updating resource location:', error);
         |                     ^
      46 |             throw error;
      47 |         }
      48 |     }

      at error (models/mapResourceModel.js:45:21)
      at call (models/mapResourceModel.js:2:1)
      at Generator.tryCatch (models/mapResourceModel.js:2:1)
      at Generator._invoke [as next] (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)
      at asyncGeneratorStep (models/mapResourceModel.js:2:1)

PASS tests/unit/walletModel.test.js
  ● Console

    console.error
      Error fetching balance: Database error

      16 |             res.status(200).json({ balance });
      17 |         } catch (error) {
    > 18 |             console.error("Error fetching balance:", error.message);
         |                     ^
      19 |             res.status(500).json({ message: "Error fetching balance", error: error.message });
      20 |         }
      21 |     }

      at error (controllers/walletController.js:18:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error adding card: Card already exists for this user

      30 |             res.status(200).json({ message: "Card added successfully", cardId: result.insertId });
      31 |         } catch (error) {
    > 32 |             console.error("Error adding card:", error.message);
         |                     ^
      33 |
      34 |             // Handle duplicate card error
      35 |             if (error.message === "Card already exists for this user") {

      at error (controllers/walletController.js:32:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error adding card: Database error

      30 |             res.status(200).json({ message: "Card added successfully", cardId: result.insertId });
      31 |         } catch (error) {
    > 32 |             console.error("Error adding card:", error.message);
         |                     ^
      33 |
      34 |             // Handle duplicate card error
      35 |             if (error.message === "Card already exists for this user") {

      at error (controllers/walletController.js:32:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching cards: Database error

      49 |             res.status(200).json(cards);
      50 |         } catch (error) {
    > 51 |             console.error("Error fetching cards:", error.message);
         |                     ^
      52 |             res.status(500).json({ message: "Error fetching cards", error: error.message });
      53 |         }
      54 |     }

      at error (controllers/walletController.js:51:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error removing card: Error: Database error
          at _callee11$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:173:59)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      193 |             res.status(200).json({ message: "Card removed successfully" });
      194 |         } catch (error) {
    > 195 |             console.error("Error removing card:", error);
          |                     ^
      196 |             res.status(500).json({ message: "Failed to remove card", error: error.message });
      197 |         }
      198 |     }

      at error (controllers/walletController.js:195:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error adding card: Invalid card number

      30 |             res.status(200).json({ message: "Card added successfully", cardId: result.insertId });
      31 |         } catch (error) {
    > 32 |             console.error("Error adding card:", error.message);
         |                     ^
      33 |
      34 |             // Handle duplicate card error
      35 |             if (error.message === "Card already exists for this user") {

      at error (controllers/walletController.js:32:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching balance: Database error

      16 |             res.status(200).json({ balance });
      17 |         } catch (error) {
    > 18 |             console.error("Error fetching balance:", error.message);
         |                     ^
      19 |             res.status(500).json({ message: "Error fetching balance", error: error.message });
      20 |         }
      21 |     }

      at error (controllers/walletController.js:18:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error adding card: Cannot read properties of undefined (reading 'insertId')

      30 |             res.status(200).json({ message: "Card added successfully", cardId: result.insertId });
      31 |         } catch (error) {
    > 32 |             console.error("Error adding card:", error.message);
         |                     ^
      33 |
      34 |             // Handle duplicate card error
      35 |             if (error.message === "Card already exists for this user") {

      at error (controllers/walletController.js:32:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as next] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error adding card: Cannot read properties of undefined (reading 'insertId')

      30 |             res.status(200).json({ message: "Card added successfully", cardId: result.insertId });
      31 |         } catch (error) {
    > 32 |             console.error("Error adding card:", error.message);
         |                     ^
      33 |
      34 |             // Handle duplicate card error
      35 |             if (error.message === "Card already exists for this user") {

      at error (controllers/walletController.js:32:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as next] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error adding card: Card already exists for this user

      30 |             res.status(200).json({ message: "Card added successfully", cardId: result.insertId });
      31 |         } catch (error) {
    > 32 |             console.error("Error adding card:", error.message);
         |                     ^
      33 |
      34 |             // Handle duplicate card error
      35 |             if (error.message === "Card already exists for this user") {

      at error (controllers/walletController.js:32:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error removing card: Error: Database error
          at _callee21$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:346:54)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      193 |             res.status(200).json({ message: "Card removed successfully" });
      194 |         } catch (error) {
    > 195 |             console.error("Error removing card:", error);
          |                     ^
      196 |             res.status(500).json({ message: "Failed to remove card", error: error.message });
      197 |         }
      198 |     }

      at error (controllers/walletController.js:195:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching statistics: Database error

      126 |             });
      127 |         } catch (error) {
    > 128 |             console.error("Error fetching statistics:", error.message);
          |                     ^
      129 |             res.status(500).json({ message: "Failed to fetch statistics" });
      130 |         }
      131 |     }

      at error (controllers/walletController.js:128:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.log
      100 50

      at log (controllers/walletController.js:158:21)

    console.log
      100 150

      at log (controllers/walletController.js:158:21)

    console.log
      100 50

      at log (controllers/walletController.js:158:21)

    console.error
      Error processing donation: Error: Database error
          at _callee27$ (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:452:69)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at _next (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at new Promise (<anonymous>)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/walletModel.test.js:2:1)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      174 |             res.status(200).json({ message: "Donation successful" });
      175 |         } catch (error) {
    > 176 |             console.error("Error processing donation:", error);
          |                     ^
      177 |             res.status(500).json({ message: "Failed to process donation" });
      178 |         }
      179 |     }

      at error (controllers/walletController.js:176:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

PASS tests/unit/authMiddleware.test.js
  ● Console

    console.log
      Token verified successfully, proceeding to next.

      at log (middlewares/authMiddleware.js:43:17)

    console.error
      Token is missing in auth middleware

      24 |     // If token is still not found, return an error
      25 |     if (!token) {
    > 26 |         console.error("Token is missing in auth middleware");
         |                 ^
      27 |         return res
      28 |             .status(401)
      29 |             .render("error", { message: "Access denied, token missing!" });

      at error (middlewares/authMiddleware.js:26:17)
      at Object.<anonymous> (tests/unit/authMiddleware.test.js:39:23)

    console.error
      Token is invalid or expired: Error: Invalid token
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/authMiddleware.test.js:49:22)
          at /Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:397:39
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:404:13)
          at Object.mockConstructor [as verify] (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:148:19)
          at verify (/Users/shangchienliu/Desktop/f24-fse-sb2/middlewares/authMiddleware.js:33:9)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/authMiddleware.test.js:52:23)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      33 |     jwt.verify(token, JWT_SECRET, (err, user) => {
      34 |         if (err) {
    > 35 |             console.error("Token is invalid or expired:", err);
         |                     ^
      36 |             return res
      37 |                 .status(403)
      38 |                 .render("error", { message: "Invalid or expired token!" });

      at error (middlewares/authMiddleware.js:35:21)
      at Object.callback (tests/unit/authMiddleware.test.js:49:13)
      at verify (middlewares/authMiddleware.js:33:9)
      at Object.<anonymous> (tests/unit/authMiddleware.test.js:52:23)

    console.error
      Token is invalid or expired: Error: TokenExpiredError
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/authMiddleware.test.js:63:22)
          at /Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:397:39
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:404:13)
          at Object.mockConstructor [as verify] (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-mock/build/index.js:148:19)
          at verify (/Users/shangchienliu/Desktop/f24-fse-sb2/middlewares/authMiddleware.js:33:9)
          at Object.<anonymous> (/Users/shangchienliu/Desktop/f24-fse-sb2/tests/unit/authMiddleware.test.js:66:23)
          at Promise.then.completed (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:121:9)
          at run (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/jest-runner/build/testWorker.js:106:12)

      33 |     jwt.verify(token, JWT_SECRET, (err, user) => {
      34 |         if (err) {
    > 35 |             console.error("Token is invalid or expired:", err);
         |                     ^
      36 |             return res
      37 |                 .status(403)
      38 |                 .render("error", { message: "Invalid or expired token!" });

      at error (middlewares/authMiddleware.js:35:21)
      at Object.callback (tests/unit/authMiddleware.test.js:63:13)
      at verify (middlewares/authMiddleware.js:33:9)
      at Object.<anonymous> (tests/unit/authMiddleware.test.js:66:23)

    console.error
      Token is missing in auth middleware

      24 |     // If token is still not found, return an error
      25 |     if (!token) {
    > 26 |         console.error("Token is missing in auth middleware");
         |                 ^
      27 |         return res
      28 |             .status(401)
      29 |             .render("error", { message: "Access denied, token missing!" });

      at error (middlewares/authMiddleware.js:26:17)
      at Object.<anonymous> (tests/unit/authMiddleware.test.js:77:23)

PASS tests/unit/dbConfig.test.js
PASS tests/unit/searchRules.test.js
PASS tests/unit/validation.test.js
PASS tests/unit/resourceManagement.test.js
PASS tests/unit/stopwords.test.js
FAIL tests/integration/ESNController.test.js
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error fetching user status: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT *\n' +
          '                FROM user\n' +
          '                WHERE user_name = ?\n' +
          "                AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      50 |             });
      51 |         } catch (err) {
    > 52 |             console.error("Error fetching user status:", err);
         |                     ^
      53 |             return res.status(500).json({ message: "Internal Server Error" });
      54 |         }
      55 |     }

      at error (controllers/ESNController.js:52:21)
      at call (controllers/ESNController.js:2:1)
      at Generator.tryCatch (controllers/ESNController.js:2:1)
      at Generator._invoke [as throw] (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)

    console.log
      Updating status for test to Emergency

      at log (controllers/ESNController.js:60:21)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error updating citizen status: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT *\n' +
          '                FROM user\n' +
          '                WHERE user_name = ?\n' +
          "                AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      82 |             return res.status(200).json({ message: "Citizen status updated successfully" });
      83 |         } catch (err) {
    > 84 |             console.error("Error updating citizen status:", err);
         |                     ^
      85 |             return res.status(500).json({ message: "Internal Server Error" });
      86 |         }
      87 |     }

      at error (controllers/ESNController.js:84:21)
      at call (controllers/ESNController.js:2:1)
      at Generator.tryCatch (controllers/ESNController.js:2:1)
      at Generator._invoke [as throw] (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)

    console.log
      Updating status for nonexistentuser to Emergency

      at log (controllers/ESNController.js:60:21)

    console.error
      Error executing query Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      51 |             };
      52 |         } catch (err) {
    > 53 |             console.error("Error executing query", err.stack);
         |                     ^
      54 |             throw err;
      55 |         }
      56 |     }

      at error (models/userModel.js:53:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error updating citizen status: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:37:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '            SELECT *\n' +
          '                FROM user\n' +
          '                WHERE user_name = ?\n' +
          "                AND account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

      82 |             return res.status(200).json({ message: "Citizen status updated successfully" });
      83 |         } catch (err) {
    > 84 |             console.error("Error updating citizen status:", err);
         |                     ^
      85 |             return res.status(500).json({ message: "Internal Server Error" });
      86 |         }
      87 |     }

      at error (controllers/ESNController.js:84:21)
      at call (controllers/ESNController.js:2:1)
      at Generator.tryCatch (controllers/ESNController.js:2:1)
      at Generator._invoke [as throw] (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)

    console.error
      Error fetching all users Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:385:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      386 |             return rows; // Return the array of users
      387 |         } catch (err) {
    > 388 |             console.error("Error fetching all users", err.stack);
          |                     ^
      389 |             throw err;
      390 |         }
      391 |     }

      at error (models/userModel.js:388:21)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as throw] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

    console.error
      Error in getting all users: Error: Unknown column 'account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:385:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/userModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT user_name AS username,\n' +
          '                    status AS citizenStatus,\n' +
          '                    online_status AS onLineStatus\n' +
          '                FROM user\n' +
          "                WHERE account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'account_status' in 'where clause'"
      }

       9 |             io.emit("allUsers", users); 
      10 |         } catch (err) {
    > 11 |             console.error("Error in getting all users:", err);
         |                     ^
      12 |             res.status(500).json({ message: "Internal Server Error" });
      13 |         }
      14 |     }

      at error (controllers/ESNController.js:11:21)
      at call (controllers/ESNController.js:2:1)
      at Generator.tryCatch (controllers/ESNController.js:2:1)
      at Generator._invoke [as throw] (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)
      at asyncGeneratorStep (controllers/ESNController.js:2:1)

    console.log
      User logged out

      at log (controllers/ESNController.js:25:21)

  ● Integration Test › getUserCitizenStatus › should return the citizen status and username of the test user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      36 |
      37 |             // Verify the response
    > 38 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      39 |             expect(res.json).toHaveBeenCalledWith({
      40 |                 username: 'test',
      41 |                 citizenStatus: 'Undefined',

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:38:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

  ● Integration Test › updateUserCitizenStatus › should update the citizen status of the test user and verify it

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      78 |
      79 |             // Verify the update response
    > 80 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      81 |             expect(res.json).toHaveBeenCalledWith({ message: 'Citizen status updated successfully' });
      82 |
      83 |             // Now, verify the update by querying the database directly

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:80:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

  ● Integration Test › updateUserCitizenStatus › should return 404 when trying to update a user that does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      100 |
      101 |             // Verify the response
    > 102 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      103 |             expect(res.json).toHaveBeenCalledWith({
      104 |                 error: 'User not found',
      105 |             });

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:102:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

  ● Integration Test › getAllUsers › should return a list of all users

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      117 |             await ESNController.getAllUsers(req, res);
      118 |     
    > 119 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      120 |     
      121 |             // Expected users array with multiple entries for verification
      122 |             const expectedUsers = [

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:119:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

FAIL tests/integration/walletControllet.test.js (5.024 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error fetching user balance: Unknown column 'u.account_status' in 'where clause'

      22 |             return rows[0].balance;
      23 |         } catch (error) {
    > 24 |             console.error("Error fetching user balance:", error.message);
         |                     ^
      25 |             throw error;
      26 |         }
      27 |     }

      at error (models/walletModel.js:24:21)
      at call (models/walletModel.js:2:1)
      at Generator.tryCatch (models/walletModel.js:2:1)
      at Generator._invoke [as throw] (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)

    console.error
      Error fetching balance: Unknown column 'u.account_status' in 'where clause'

      16 |             res.status(200).json({ balance });
      17 |         } catch (error) {
    > 18 |             console.error("Error fetching balance:", error.message);
         |                     ^
      19 |             res.status(500).json({ message: "Error fetching balance", error: error.message });
      20 |         }
      21 |     }

      at error (controllers/walletController.js:18:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching user balance: Unknown column 'u.account_status' in 'where clause'

      22 |             return rows[0].balance;
      23 |         } catch (error) {
    > 24 |             console.error("Error fetching user balance:", error.message);
         |                     ^
      25 |             throw error;
      26 |         }
      27 |     }

      at error (models/walletModel.js:24:21)
      at call (models/walletModel.js:2:1)
      at Generator.tryCatch (models/walletModel.js:2:1)
      at Generator._invoke [as throw] (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)

    console.error
      Error fetching balance: Unknown column 'u.account_status' in 'where clause'

      16 |             res.status(200).json({ balance });
      17 |         } catch (error) {
    > 18 |             console.error("Error fetching balance:", error.message);
         |                     ^
      19 |             res.status(500).json({ message: "Error fetching balance", error: error.message });
      20 |         }
      21 |     }

      at error (controllers/walletController.js:18:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching user cards: Unknown column 'u.account_status' in 'where clause'

      114 |             return rows;
      115 |         } catch (error) {
    > 116 |             console.error("Error fetching user cards:", error.message);
          |                     ^
      117 |             throw error;
      118 |         }
      119 |     }

      at error (models/walletModel.js:116:21)
      at call (models/walletModel.js:2:1)
      at Generator.tryCatch (models/walletModel.js:2:1)
      at Generator._invoke [as throw] (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)

    console.error
      Error fetching cards: Unknown column 'u.account_status' in 'where clause'

      49 |             res.status(200).json(cards);
      50 |         } catch (error) {
    > 51 |             console.error("Error fetching cards:", error.message);
         |                     ^
      52 |             res.status(500).json({ message: "Error fetching cards", error: error.message });
      53 |         }
      54 |     }

      at error (controllers/walletController.js:51:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching user cards: Unknown column 'u.account_status' in 'where clause'

      114 |             return rows;
      115 |         } catch (error) {
    > 116 |             console.error("Error fetching user cards:", error.message);
          |                     ^
      117 |             throw error;
      118 |         }
      119 |     }

      at error (models/walletModel.js:116:21)
      at call (models/walletModel.js:2:1)
      at Generator.tryCatch (models/walletModel.js:2:1)
      at Generator._invoke [as throw] (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)

    console.error
      Error fetching cards: Unknown column 'u.account_status' in 'where clause'

      49 |             res.status(200).json(cards);
      50 |         } catch (error) {
    > 51 |             console.error("Error fetching cards:", error.message);
         |                     ^
      52 |             res.status(500).json({ message: "Error fetching cards", error: error.message });
      53 |         }
      54 |     }

      at error (controllers/walletController.js:51:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching user balance: Unknown column 'u.account_status' in 'where clause'

      22 |             return rows[0].balance;
      23 |         } catch (error) {
    > 24 |             console.error("Error fetching user balance:", error.message);
         |                     ^
      25 |             throw error;
      26 |         }
      27 |     }

      at error (models/walletModel.js:24:21)
      at call (models/walletModel.js:2:1)
      at Generator.tryCatch (models/walletModel.js:2:1)
      at Generator._invoke [as throw] (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)

    console.error
      Error processing donation: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:16:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT w.balance\n' +
          '                FROM wallet w\n' +
          '                JOIN user u ON w.user_id = u.id\n' +
          '                WHERE u.user_name = ?\n' +
          "                AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      174 |             res.status(200).json({ message: "Donation successful" });
      175 |         } catch (error) {
    > 176 |             console.error("Error processing donation:", error);
          |                     ^
      177 |             res.status(500).json({ message: "Failed to process donation" });
      178 |         }
      179 |     }

      at error (controllers/walletController.js:176:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

    console.error
      Error fetching user balance: Unknown column 'u.account_status' in 'where clause'

      22 |             return rows[0].balance;
      23 |         } catch (error) {
    > 24 |             console.error("Error fetching user balance:", error.message);
         |                     ^
      25 |             throw error;
      26 |         }
      27 |     }

      at error (models/walletModel.js:24:21)
      at call (models/walletModel.js:2:1)
      at Generator.tryCatch (models/walletModel.js:2:1)
      at Generator._invoke [as throw] (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)
      at asyncGeneratorStep (models/walletModel.js:2:1)

    console.error
      Error processing donation: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:16:45)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/walletModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT w.balance\n' +
          '                FROM wallet w\n' +
          '                JOIN user u ON w.user_id = u.id\n' +
          '                WHERE u.user_name = ?\n' +
          "                AND u.account_status = 'active';\n" +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      174 |             res.status(200).json({ message: "Donation successful" });
      175 |         } catch (error) {
    > 176 |             console.error("Error processing donation:", error);
          |                     ^
      177 |             res.status(500).json({ message: "Failed to process donation" });
      178 |         }
      179 |     }

      at error (controllers/walletController.js:176:21)
      at call (controllers/walletController.js:2:1)
      at Generator.tryCatch (controllers/walletController.js:2:1)
      at Generator._invoke [as throw] (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)
      at asyncGeneratorStep (controllers/walletController.js:2:1)

  ● WalletController Integration Test › getBalance › should return the correct balance for a user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      48 |             await WalletController.getBalance(req, res);
      49 |
    > 50 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      51 |             expect(res.json).toHaveBeenCalledWith({ balance: "500.00" });
      52 |         });
      53 |

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:50:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › getBalance › should return 404 if wallet not found

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      61 |             await WalletController.getBalance(req, res);
      62 |
    > 63 |             expect(res.status).toHaveBeenCalledWith(404);
         |                                ^
      64 |             expect(res.json).toHaveBeenCalledWith({ message: 'Wallet not found' });
      65 |         });
      66 |     });

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:63:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › getCards › should return all cards for a user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      76 |             await WalletController.getCards(req, res);
      77 |
    > 78 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      79 |             expect(res.json).toHaveBeenCalledWith(expect.any(Array));
      80 |         });
      81 |

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:78:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › getCards › should return an empty array if user has no cards

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      89 |             await WalletController.getCards(req, res);
      90 |
    > 91 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      92 |             expect(res.json).toHaveBeenCalledWith([]);
      93 |         });
      94 |     });

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:91:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › processDonation › should process a donation successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      110 |             await WalletController.processDonation(req, res);
      111 |
    > 112 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      113 |             expect(res.json).toHaveBeenCalledWith({ message: 'Donation successful' });
      114 |
      115 |             const [rows] = await dbConnection.query(`

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:112:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › processDonation › should fail if sender has insufficient balance

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 500

    Number of calls: 1

      134 |             await WalletController.processDonation(req, res);
      135 |
    > 136 |             expect(res.status).toHaveBeenCalledWith(400);
          |                                ^
      137 |             expect(res.json).toHaveBeenCalledWith({ message: 'Insufficient balance' });
      138 |         });
      139 |     });

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:136:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

PASS tests/integration/mapResourceController.test.js (6.896 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error adding resource: All fields (title, description, latitude, longitude) are required.

      35 |             });
      36 |         } catch (error) {
    > 37 |             console.error("Error adding resource:", error.message);
         |                     ^
      38 |             res.status(500).json({
      39 |                 message: "Error adding resource",
      40 |                 error: error.message,

      at error (controllers/mapResourceController.js:37:21)
      at call (controllers/mapResourceController.js:2:1)
      at Generator.tryCatch (controllers/mapResourceController.js:2:1)
      at Generator._invoke [as next] (controllers/mapResourceController.js:2:1)
      at asyncGeneratorStep (controllers/mapResourceController.js:2:1)
      at asyncGeneratorStep (controllers/mapResourceController.js:2:1)
      at _next (controllers/mapResourceController.js:2:1)
      at Function.<anonymous> (controllers/mapResourceController.js:2:1)
      at Function.apply [as addResource] (controllers/mapResourceController.js:22:29)
      at addResource (tests/integration/mapResourceController.test.js:150:41)
      at call (tests/integration/mapResourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/mapResourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/mapResourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/mapResourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/mapResourceController.test.js:2:1)
      at _next (tests/integration/mapResourceController.test.js:2:1)
      at Object.<anonymous> (tests/integration/mapResourceController.test.js:2:1)

    console.error
      Error updating resource location: Latitude and Longitude are required.

      64 |             });
      65 |         } catch (error) {
    > 66 |             console.error("Error updating resource location:", error.message);
         |                     ^
      67 |             res.status(500).json({
      68 |                 message: "Error updating resource location",
      69 |                 error: error.message,

      at error (controllers/mapResourceController.js:66:21)
      at call (controllers/mapResourceController.js:2:1)
      at Generator.tryCatch (controllers/mapResourceController.js:2:1)
      at Generator._invoke [as next] (controllers/mapResourceController.js:2:1)
      at asyncGeneratorStep (controllers/mapResourceController.js:2:1)
      at asyncGeneratorStep (controllers/mapResourceController.js:2:1)
      at _next (controllers/mapResourceController.js:2:1)
      at Function.<anonymous> (controllers/mapResourceController.js:2:1)
      at Function.apply [as updateResourceLocation] (controllers/mapResourceController.js:46:40)
      at updateResourceLocation (tests/integration/mapResourceController.test.js:202:41)
      at call (tests/integration/mapResourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/mapResourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/mapResourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/mapResourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/mapResourceController.test.js:2:1)
      at _next (tests/integration/mapResourceController.test.js:2:1)
      at Object.<anonymous> (tests/integration/mapResourceController.test.js:2:1)

    console.error
      Error updating resource location: Resource not found.

      64 |             });
      65 |         } catch (error) {
    > 66 |             console.error("Error updating resource location:", error.message);
         |                     ^
      67 |             res.status(500).json({
      68 |                 message: "Error updating resource location",
      69 |                 error: error.message,

      at error (controllers/mapResourceController.js:66:21)
      at call (controllers/mapResourceController.js:2:1)
      at Generator.tryCatch (controllers/mapResourceController.js:2:1)
      at Generator._invoke [as next] (controllers/mapResourceController.js:2:1)
      at asyncGeneratorStep (controllers/mapResourceController.js:2:1)
      at asyncGeneratorStep (controllers/mapResourceController.js:2:1)

FAIL tests/integration/incidentPostMessageController.test.js (12.732 s)
  ● Console

    console.log
      SSH connection established.

      at Client.log (configurations/mysqlDatabase.js:180:25)

    console.log
      Connected to database: sb2-test

      at log (configurations/dbConfig.js:62:17)

    console.log
      Test database connection established PromiseConnection {
        _events: [Object: null prototype] {
          newListener: [Function (anonymous)],
          removeListener: [Function (anonymous)]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        connection: Connection {
          _events: [Object: null prototype] { error: [Function] },
          _eventsCount: 1,
          _maxListeners: undefined,
          config: ConnectionConfig {
            isServer: undefined,
            stream: [Channel],
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: 'Pqtu9baKLwwHC&Pq',
            password2: undefined,
            password3: undefined,
            passwordSha1: undefined,
            database: 'sb2-test',
            connectTimeout: 10000,
            insecureAuth: false,
            infileStreamFactory: undefined,
            supportBigNumbers: false,
            bigNumberStrings: false,
            decimalNumbers: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            enableKeepAlive: true,
            keepAliveInitialDelay: undefined,
            timezone: 'local',
            queryFormat: undefined,
            pool: undefined,
            ssl: false,
            multipleStatements: true,
            rowsAsArray: false,
            namedPlaceholders: false,
            nestTables: undefined,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 224,
            compress: false,
            authPlugins: undefined,
            authSwitchHandler: undefined,
            clientFlags: 12317647,
            connectAttributes: [Object],
            maxPreparedStatements: 16000,
            jsonStrings: false
          },
          stream: <ref *1> Channel {
            _events: [Object],
            _readableState: [ReadableState],
            _writableState: [WritableState],
            allowHalfOpen: true,
            _maxListeners: undefined,
            server: false,
            type: 'direct-tcpip',
            subtype: undefined,
            incoming: [Object],
            outgoing: [Object],
            _callbacks: [],
            _client: [Client],
            _hasX11: false,
            _exit: [Object],
            stdout: [Circular *1],
            stdin: [Circular *1],
            stderr: [ClientStderr],
            _waitWindow: false,
            _waitChanDrain: false,
            _chunk: undefined,
            _chunkcb: undefined,
            _chunkErr: undefined,
            _chunkcbErr: undefined,
            _eventsCount: 6,
            [Symbol(shapeMode)]: true,
            [Symbol(kCapture)]: false
          },
          _internalId: 0,
          _commands: Denque {
            _capacity: undefined,
            _head: 0,
            _tail: 0,
            _capacityMask: 3,
            _list: [Array]
          },
          _command: undefined,
          _paused: false,
          _paused_packets: Denque {
            _capacity: undefined,
            _head: 0,
            _tail: 0,
            _capacityMask: 3,
            _list: [Array]
          },
          _statements: {
            set: [Function: set],
            get: [Function: get],
            peek: [Function: peek],
            has: [Function: has],
            keys: [GeneratorFunction: keys],
            values: [GeneratorFunction: values],
            entries: [GeneratorFunction: entries],
            forEach: [Function: forEach],
            delete: [Function: delete],
            evict: [Function: evict],
            clear: [Function: clear],
            resize: [Function: resize],
            max: [Getter],
            size: [Getter],
            available: [Getter]
          },
          serverCapabilityFlags: 3758096383,
          authorized: true,
          sequenceId: 6,
          compressedSequenceId: 0,
          threadId: 3171,
          _handshakePacket: Handshake {
            protocolVersion: 10,
            serverVersion: '8.0.39',
            capabilityFlags: 3758096383,
            connectionId: 3171,
            authPluginData1: <Buffer 35 53 1b 4a 4b 56 5c 49>,
            authPluginData2: <Buffer 60 29 36 6c 28 69 22 49 44 1c 52 20 00>,
            characterSet: 255,
            statusFlags: 2,
            autPluginName: 'caching_sha2_password'
          },
          _fatalError: null,
          _protocolError: null,
          _outOfOrderPackets: [],
          clientEncoding: 'utf8',
          packetParser: PacketParser {
            buffer: [],
            bufferLength: 0,
            packetHeaderLength: 4,
            headerLen: 0,
            length: 5,
            largePacketParts: [],
            firstPacketSequenceId: 0,
            onPacket: [Function (anonymous)],
            execute: [Function: executeStart],
            _flushLargePacket: [Function: _flushLargePacket4]
          },
          serverEncoding: 'utf8',
          connectTimeout: null,
          connectionId: 3171,
          _authPlugin: [Function (anonymous)],
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        Promise: [Function: Promise],
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      }

      at log (tests/integration/incidentPostMessageController.test.js:12:13)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.log
      Connected to database in setDatabaseconnection: sb2

      at log (configurations/dbConfig.js:31:17)

    console.error
      Error fetching incident posts with images: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:205:40)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT \n' +
          '                    ip.id AS incidentId,\n' +
          '                    ip.title AS incidentTitle,\n' +
          '                    ip.details AS incidentDetails,\n' +
          '                    u.user_name AS username,\n' +
          '                    ip.sender_status AS userstatus,\n' +
          '                    ip.timestamp AS incidentTimestamp,\n' +
          '                    ip.resource_details AS resourceDetails,\n' +
          '                    img.image_name AS imageName,\n' +
          '                    img.type AS imageType\n' +
          '                FROM incidentPost ip\n' +
          '                LEFT JOIN image img ON ip.id = img.incidentPost_id\n' +
          '                JOIN user u ON ip.sender_id = u.id\n' +
          "                WHERE u.account_status = 'active'\n" +
          '                ORDER BY ip.timestamp DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      253 |             return Array.from(postMap.values());
      254 |         } catch (err) {
    > 255 |             console.error("Error fetching incident posts with images:", err);
          |                     ^
      256 |             throw new Error("Failed to retrieve incident posts");
      257 |         }
      258 |     }

      at error (models/incidentPostModel.js:255:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error fetching incident posts: Error: Failed to retrieve incident posts
          at _callee6$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:256:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as throw] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      14 |       return res.status(200).json({ message: "Incident posts retrieved successfully", data: posts });
      15 |     } catch (err) {
    > 16 |       console.error("Error fetching incident posts:", err);
         |               ^
      17 |       return res.status(500).json({ message: "An error occurred while fetching incident posts" });
      18 |     }
      19 |   }

      at error (controllers/incidentPostMessageController.js:16:15)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.error
      Error fetching incident posts with images: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:205:40)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                SELECT \n' +
          '                    ip.id AS incidentId,\n' +
          '                    ip.title AS incidentTitle,\n' +
          '                    ip.details AS incidentDetails,\n' +
          '                    u.user_name AS username,\n' +
          '                    ip.sender_status AS userstatus,\n' +
          '                    ip.timestamp AS incidentTimestamp,\n' +
          '                    ip.resource_details AS resourceDetails,\n' +
          '                    img.image_name AS imageName,\n' +
          '                    img.type AS imageType\n' +
          '                FROM incidentPost ip\n' +
          '                LEFT JOIN image img ON ip.id = img.incidentPost_id\n' +
          '                JOIN user u ON ip.sender_id = u.id\n' +
          "                WHERE u.account_status = 'active'\n" +
          '                ORDER BY ip.timestamp DESC;\n' +
          '            ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      253 |             return Array.from(postMap.values());
      254 |         } catch (err) {
    > 255 |             console.error("Error fetching incident posts with images:", err);
          |                     ^
      256 |             throw new Error("Failed to retrieve incident posts");
      257 |         }
      258 |     }

      at error (models/incidentPostModel.js:255:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error fetching incident posts: Error: Failed to retrieve incident posts
          at _callee6$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:256:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as throw] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      14 |       return res.status(200).json({ message: "Incident posts retrieved successfully", data: posts });
      15 |     } catch (err) {
    > 16 |       console.error("Error fetching incident posts:", err);
         |               ^
      17 |       return res.status(500).json({ message: "An error occurred while fetching incident posts" });
      18 |     }
      19 |   }

      at error (controllers/incidentPostMessageController.js:16:15)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.error
      Error fetching incident post by ID: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:266:41)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                    SELECT ip.id,\n' +
          '                        ip.title,\n' +
          '                        ip.details,\n' +
          '                        u.user_name AS sender_name,\n' +
          '                        u.status AS sender_status,\n' +
          '                        ip.timestamp,\n' +
          '                        ip.resource_details\n' +
          '                    FROM incidentPost ip\n' +
          '                    JOIN user u ON ip.sender_id = u.id\n' +
          '                    WHERE ip.id = 1095\n' +
          "                    AND u.account_status = 'active';\n" +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      288 |             return post;
      289 |         } catch (err) {
    > 290 |             console.error("Error fetching incident post by ID:", err);
          |                     ^
      291 |             throw new Error("Failed to retrieve the incident post");
      292 |         }
      293 |     }

      at error (models/incidentPostModel.js:290:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error fetching incident post by ID: Error: Failed to retrieve the incident post
          at _callee7$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:291:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as throw] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      34 |       return res.status(200).json({ message: "Incident post retrieved successfully", data: post });
      35 |     } catch (err) {
    > 36 |       console.error("Error fetching incident post by ID:", err);
         |               ^
      37 |       return res.status(500).json({ message: "An error occurred while fetching the incident post" });
      38 |     }
      39 |   }

      at error (controllers/incidentPostMessageController.js:36:15)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.error
      Error fetching incident post by ID: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.query (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:94:22)
          at query (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:266:41)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                    SELECT ip.id,\n' +
          '                        ip.title,\n' +
          '                        ip.details,\n' +
          '                        u.user_name AS sender_name,\n' +
          '                        u.status AS sender_status,\n' +
          '                        ip.timestamp,\n' +
          '                        ip.resource_details\n' +
          '                    FROM incidentPost ip\n' +
          '                    JOIN user u ON ip.sender_id = u.id\n' +
          '                    WHERE ip.id = 99999\n' +
          "                    AND u.account_status = 'active';\n" +
          '                ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      288 |             return post;
      289 |         } catch (err) {
    > 290 |             console.error("Error fetching incident post by ID:", err);
          |                     ^
      291 |             throw new Error("Failed to retrieve the incident post");
      292 |         }
      293 |     }

      at error (models/incidentPostModel.js:290:21)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

    console.error
      Error fetching incident post by ID: Error: Failed to retrieve the incident post
          at _callee7$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:291:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at Generator._invoke [as throw] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      34 |       return res.status(200).json({ message: "Incident post retrieved successfully", data: post });
      35 |     } catch (err) {
    > 36 |       console.error("Error fetching incident post by ID:", err);
         |               ^
      37 |       return res.status(500).json({ message: "An error occurred while fetching the incident post" });
      38 |     }
      39 |   }

      at error (controllers/incidentPostMessageController.js:36:15)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.log
      1098

      at log (controllers/incidentPostMessageController.js:47:17)

    console.error
      Error fetching incident post messages: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:68:37)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                    SELECT im.id,\n' +
          '                        im.text,\n' +
          '                        im.sent_time,\n' +
          '                        u.user_name AS sender_name,\n' +
          '                        u.status AS sender_status,\n' +
          '                        im.incidentPost_id\n' +
          '                    FROM incidentMessage im\n' +
          '                    JOIN user u ON im.sender_id = u.id\n' +
          '                    WHERE im.incidentPost_id = ?\n' +
          "                    AND u.account_status = 'active';\n" +
          '                 ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      87 |                 throw err;
      88 |             }
    > 89 |             console.error("Error fetching incident post messages:", err);
         |                     ^
      90 |             throw new Error("An error occurred while fetching incident messages");
      91 |         }
      92 |     }

      at error (models/incidentPostMessageModel.js:89:21)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

    console.error
      Error fetching incident responses: Error: An error occurred while fetching incident messages
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:90:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator._invoke [as throw] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      68 |         });
      69 |     } catch (err) {
    > 70 |         console.error("Error fetching incident responses:", err);
         |                 ^
      71 |         return res.status(500).json({
      72 |             message: "An error occurred while fetching incident responses",
      73 |         });

      at error (controllers/incidentPostMessageController.js:70:17)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.log
      9999999

      at log (controllers/incidentPostMessageController.js:47:17)

    console.error
      Error fetching incident post messages: Error: Unknown column 'u.account_status' in 'where clause'
          at PromiseConnection.execute (/Users/shangchienliu/Desktop/f24-fse-sb2/node_modules/mysql2/promise.js:112:22)
          at execute (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:68:37)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5) {
        code: 'ER_BAD_FIELD_ERROR',
        errno: 1054,
        sql: '\n' +
          '                    SELECT im.id,\n' +
          '                        im.text,\n' +
          '                        im.sent_time,\n' +
          '                        u.user_name AS sender_name,\n' +
          '                        u.status AS sender_status,\n' +
          '                        im.incidentPost_id\n' +
          '                    FROM incidentMessage im\n' +
          '                    JOIN user u ON im.sender_id = u.id\n' +
          '                    WHERE im.incidentPost_id = ?\n' +
          "                    AND u.account_status = 'active';\n" +
          '                 ',
        sqlState: '42S22',
        sqlMessage: "Unknown column 'u.account_status' in 'where clause'"
      }

      87 |                 throw err;
      88 |             }
    > 89 |             console.error("Error fetching incident post messages:", err);
         |                     ^
      90 |             throw new Error("An error occurred while fetching incident messages");
      91 |         }
      92 |     }

      at error (models/incidentPostMessageModel.js:89:21)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as throw] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

    console.error
      Error fetching incident responses: Error: An error occurred while fetching incident messages
          at _callee2$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:90:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator._invoke [as throw] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      68 |         });
      69 |     } catch (err) {
    > 70 |         console.error("Error fetching incident responses:", err);
         |                 ^
      71 |         return res.status(500).json({
      72 |             message: "An error occurred while fetching incident responses",
      73 |         });

      at error (controllers/incidentPostMessageController.js:70:17)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.error
      Error creating incident message: User 'testuser' not found.

      58 |             return rows[0];
      59 |         } catch (err) {
    > 60 |             console.error("Error creating incident message:", err.message);
         |                     ^
      61 |             throw new Error("An error occurred while creating the incident message");
      62 |         }        
      63 |     }

      at error (models/incidentPostMessageModel.js:60:21)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

    console.error
      Error creating incident response: Error: An error occurred while creating the incident message
          at _callee$ (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:61:19)
          at call (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator.tryCatch (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at Generator._invoke [as next] (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at asyncGeneratorStep (/Users/shangchienliu/Desktop/f24-fse-sb2/models/incidentPostMessageModel.js:2:1)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      106 |           });
      107 |       } catch (err) {
    > 108 |           console.error("Error creating incident response:", err);
          |                   ^
      109 |
      110 |           // Return error response
      111 |           return res.status(500).json({

      at error (controllers/incidentPostMessageController.js:108:19)
      at call (controllers/incidentPostMessageController.js:2:1)
      at Generator.tryCatch (controllers/incidentPostMessageController.js:2:1)
      at Generator._invoke [as throw] (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)
      at asyncGeneratorStep (controllers/incidentPostMessageController.js:2:1)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Inserted test data before each test

      at log (tests/integration/incidentPostMessageController.test.js:50:13)

    console.log
      Removed test data after each test

      at log (tests/integration/incidentPostMessageController.test.js:58:15)

    console.log
      Test database connection closed

      at log (tests/integration/incidentPostMessageController.test.js:69:15)

  ● IncidentPostMessageController Integration Tests › getIncidentPosts › should fetch all incident posts with associated images

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      77 |       await IncidentPostMessageController.getIncidentPosts(req, res);
      78 |
    > 79 |       expect(res.status).toHaveBeenCalledWith(200);
         |                          ^
      80 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      81 |         message: "Incident posts retrieved successfully",
      82 |         data: expect.any(Array),

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:79:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentPosts › should return 404 if no incident posts exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      90 |       await IncidentPostMessageController.getIncidentPosts(req, res);
      91 |
    > 92 |       expect(res.status).toHaveBeenCalledWith(404);
         |                          ^
      93 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      94 |         message: "No incident posts found",
      95 |       }));

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:92:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentPostByID › should fetch a single incident post by its ID

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      103 |       await IncidentPostMessageController.getIncidentPostByID(req, res);
      104 |
    > 105 |       expect(res.status).toHaveBeenCalledWith(200);
          |                          ^
      106 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      107 |         message: "Incident post retrieved successfully",
      108 |         data: expect.objectContaining({

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:105:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentPostByID › should return 404 if the incident post does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      117 |       await IncidentPostMessageController.getIncidentPostByID(req, res);
      118 |
    > 119 |       expect(res.status).toHaveBeenCalledWith(404);
          |                          ^
      120 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      121 |         message: "Incident post not found",
      122 |       }));

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:119:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentCommentByincidentID › should fetch all responses for a specific incident post

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      141 |       await IncidentPostMessageController.getIncidentCommentByincidentID(req, res);
      142 |
    > 143 |       expect(res.status).toHaveBeenCalledWith(200);
          |                          ^
      144 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      145 |         message: "Incident responses retrieved successfully",
      146 |         data: expect.any(Array),

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:143:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentCommentByincidentID › should return 404 if no responses exist for the incident post

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      156 |       await IncidentPostMessageController.getIncidentCommentByincidentID(req, res);
      157 |
    > 158 |       expect(res.status).toHaveBeenCalledWith(404);
          |                          ^
      159 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      160 |         message: "No incident responses found",
      161 |       }));

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:158:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › newIncidentCommentByincidentID › should create a new response for an incident post

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      174 |       await IncidentPostMessageController.newIncidentCommentByincidentID(req, res);
      175 |
    > 176 |       expect(res.status).toHaveBeenCalledWith(201);
          |                          ^
      177 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      178 |         message: "Incident response created successfully",
      179 |         data: expect.objectContaining({

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:176:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
-----------------------------------|---------|----------|---------|---------|---------------------------------------------------------------------
File                               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                   
-----------------------------------|---------|----------|---------|---------|---------------------------------------------------------------------
All files                          |   53.19 |    42.03 |   66.07 |   53.21 |                                                                     
 configurations                    |   42.94 |    32.55 |   41.17 |   43.19 |                                                                     
  dbConfig.js                      |      92 |      100 |     100 |      92 | 51-52                                                               
  mysqlDatabase.js                 |   42.55 |    37.03 |   43.47 |   43.01 | 46-51,58-59,64-69,102-169,189,208,225-275                           
  socketIo.js                      |    19.6 |        0 |    12.5 |    19.6 | 12-25,30-57,62-78,83-89                                             
 controllers                       |   53.19 |     40.1 |   69.84 |   53.68 |                                                                     
  ESNController.js                 |    67.5 |       50 |     100 |    67.5 | 8-9,28-29,46,63,67,71-82                                            
  emergencyContactController.js    |   39.47 |       25 |      50 |   39.47 | 6-52,67-100,121-157,185,193,214-229,248,253                         
  incidentPostMessageController.js |   65.78 |    44.44 |      80 |   67.56 | 11-14,31-34,53-65,100-103                                           
  mapResourceController.js         |   91.66 |      100 |     100 |   91.66 | 13-14                                                               
  messageController.js             |   48.59 |    26.08 |      75 |   49.05 | 17-60,81-86,113-152,173,177,181-194,206-215,230,234,238-252,269-287 
  resourceController.js            |   29.36 |    30.18 |      50 |   29.36 | 13,21-26,54-76,92-113,136-141,149-191,201-263,271-294               
  reviewController.js              |    87.5 |      100 |     100 |    87.5 | 11,39                                                               
  searchController.js              |   68.18 |        0 |   55.55 |      75 | 18-26,44-65,77-85                                                   
  walletController.js              |   67.74 |    57.69 |   78.57 |   67.39 | 57-100,135-140,152                                                  
 middlewares                       |   94.11 |       90 |     100 |   94.11 |                                                                     
  authMiddleware.js                |   94.11 |       90 |     100 |   94.11 | 21                                                                  
 models                            |   50.52 |    24.55 |      67 |   49.94 |                                                                     
  emergencyContactModel.js         |   80.35 |    63.63 |     100 |   79.24 | 126-127,159-160,235-236,254-290,354-355                             
  incidentPostMessageModel.js      |   72.22 |     37.5 |     100 |   72.22 | 37-58,87,107                                                        
  incidentPostModel.js             |   81.81 |    63.63 |     100 |   81.81 | 29-54,83-103,232                                                    
  mapResourceModel.js              |     100 |      100 |     100 |     100 |                                                                     
  messageModel.js                  |   73.72 |    18.75 |   94.44 |   72.07 | 18-40,72-73,104-105,152-189,203-230,268                             
  resourceModel.js                 |   30.43 |    14.28 |      40 |   30.43 | 7-11,27-32,41-101,119-120                                           
  resourceRequestModel.js          |   15.38 |        0 |   28.57 |   15.38 | 7-73,91,100-116,135-140,149-196                                     
  reviewModel.js                   |   78.94 |       50 |     100 |   78.94 | 46-62                                                               
  userModel.js                     |   37.19 |    18.18 |   38.46 |   37.65 | 59-120,142-148,161-224,248-254,394-408,432-677                      
  walletModel.js                   |   11.76 |        0 |      20 |   11.76 | 18-22,30-93,114,122-312                                             
 public/js/utils                   |     100 |      100 |     100 |     100 |                                                                     
  resourceHelper.js                |     100 |      100 |     100 |     100 |                                                                     
 service/searchControllerService   |   73.33 |    83.33 |   68.75 |   77.19 |                                                                     
  announcementSearchStrategy.js    |      70 |    83.33 |      50 |   77.77 | 8,19                                                                
  privateMessageSearchStrategy.js  |      50 |       75 |      50 |   55.55 | 8-9,14,25                                                           
  publicMessageSearchStrategy.js   |   57.14 |    83.33 |      50 |   66.66 | 8,19                                                                
  searchStrategy.js                |       0 |      100 |       0 |       0 | 5-9                                                                 
  statusSearchStrategy.js          |      75 |      100 |     100 |      75 | 12                                                                  
  userSearch.js                    |   95.65 |    83.33 |     100 |   95.65 | 45                                                                  
  usernameSearchstrategy.js        |      75 |      100 |     100 |      75 | 11                                                                  
 utils                             |     100 |      100 |     100 |     100 |                                                                     
  searchRulesHelper.js             |     100 |      100 |     100 |     100 |                                                                     
  stopwordsHelper.js               |     100 |      100 |     100 |     100 |                                                                     
  validationHelper.js              |     100 |      100 |     100 |     100 |                                                                     
-----------------------------------|---------|----------|---------|---------|---------------------------------------------------------------------
Summary of all failing tests
FAIL tests/integration/searchController.test.js
  ● searchController Integration Tests › postAmmouncementSearch › should return formatted announcement search results with wordList, limit, and offset (Positive Case)

    Unknown column 'u.account_status' in 'where clause'

      69 |     
      70 |             // Execute the query with the patterns as input
    > 71 |             const [rows] = await connection.execute(query, searchPatterns);
         |                                             ^
      72 |             console.log('Fetched announcements from database:', rows);
      73 |             return rows;
      74 |         } catch (error) {

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/messageModel.js:71:45)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● searchController Integration Tests › postPrivateMessageSearch › should return formatted private message search results (Positive Case)

    Unknown column 'u_sender.account_status' in 'where clause'

      264 |     
      265 |             // Execute the query
    > 266 |             const [rows] = await connection.execute(query, queryParams);
          |                                             ^
      267 |     
      268 |             return rows;
      269 |         } catch (error) {

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/messageModel.js:266:45)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● searchController Integration Tests › postPublicMessageSearch › should return formatted public message search results (Positive Case)

    Unknown column 'u.account_status' in 'where clause'

      101 |     
      102 |             // Execute the query with the patterns as input
    > 103 |             const [rows] = await connection.execute(query, searchPatterns);
          |                                             ^
      104 |             console.log('Fetched announcements from database:', rows);
      105 |             return rows;
      106 |         } catch (error) {

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/messageModel.js:103:45)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● searchController Integration Tests › postStatusSearch › should return user status search results (Positive Case)

    Unknown column 'account_status' in 'where clause'

      138 |
      139 |             // Execute query with the provided citizen status
    > 140 |             const [rows] = await connection.execute(query, [citizenStatus]);
          |                                             ^
      141 |
      142 |             if (rows.length === 0) {
      143 |                 console.log(`No users found with status: ${citizenStatus}`);

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/userModel.js:140:45)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as next] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

  ● searchController Integration Tests › postUsernameSearch › should return username search results (Positive Case)

    Unknown column 'account_status' in 'where clause'

      242 |
      243 |             // Add wildcards to search for partial matches
    > 244 |             const [rows] = await connection.execute(query, [
          |                                             ^
      245 |                 `%${partialUsername}%`,
      246 |             ]);
      247 |

      at PromiseConnection.execute (node_modules/mysql2/promise.js:112:22)
      at execute (models/userModel.js:244:45)
      at call (models/userModel.js:2:1)
      at Generator.tryCatch (models/userModel.js:2:1)
      at Generator._invoke [as next] (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)
      at asyncGeneratorStep (models/userModel.js:2:1)

FAIL tests/integration/reviewController.test.js
  ● Integration Tests for ReviewController › getReviews › should fetch all reviews for a given resource ID successfully (positive)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      73 |             await ReviewController.getReviews(req, res);
      74 |
    > 75 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      76 |             expect(res.json).toHaveBeenCalledWith({
      77 |                 message: "Reviews fetched successfully",
      78 |                 data: expect.arrayContaining([

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:75:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should return an empty array if no reviews exist for the resource (positive)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      100 |             await ReviewController.getReviews(req, res);
      101 |
    > 102 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      103 |             expect(res.json).toHaveBeenCalledWith({
      104 |                 message: "Reviews fetched successfully",
      105 |                 data: [],

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:102:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should return 500 if there is an error fetching reviews (negative)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      117 |
      118 |             await ReviewController.getReviews(req, res);
    > 119 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      120 |
      121 |             jest.restoreAllMocks();
      122 |         });

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:119:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › getReviews › should return 500 if there is an error fetching reviews (negative)

    Database Error

      108 |
      109 |         it("should return 500 if there is an error fetching reviews (negative)", async () => {
    > 110 |             jest.spyOn(dbConnection, "query").mockRejectedValueOnce(new Error("Database Error"));
          |                                                                     ^
      111 |
      112 |             const req = { params: { resourceId: 1 } };
      113 |             const res = {

      at _callee7$ (tests/integration/reviewController.test.js:110:69)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at _next (tests/integration/reviewController.test.js:2:1)
      at Object.<anonymous> (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › addReview › should add a new review successfully (positive)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      142 |             await ReviewController.addReview(req, res);
      143 |
    > 144 |             expect(res.status).toHaveBeenCalledWith(201);
          |                                ^
      145 |
      146 |             const [rows] = await dbConnection.query(
      147 |                 "SELECT * FROM resource_reviews WHERE review_content = ?",

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:144:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › addReview › should return 500 if there is an error adding the review (negative)

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      192 |
      193 |             await ReviewController.addReview(req, res);
    > 194 |             expect(res.status).toHaveBeenCalledWith(201);
          |                                ^
      195 |
      196 |             jest.restoreAllMocks();
      197 |         });

      at toHaveBeenCalledWith (tests/integration/reviewController.test.js:194:32)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)

  ● Integration Tests for ReviewController › addReview › should return 500 if there is an error adding the review (negative)

    Database Error

      179 |
      180 |         it("should return 500 if there is an error adding the review (negative)", async () => {
    > 181 |             jest.spyOn(dbConnection, "query").mockRejectedValueOnce(new Error("Database Error"));
          |                                                                     ^
      182 |
      183 |             const req = {
      184 |                 params: { resourceId: 1 },

      at _callee11$ (tests/integration/reviewController.test.js:181:69)
      at call (tests/integration/reviewController.test.js:2:1)
      at Generator.tryCatch (tests/integration/reviewController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/reviewController.test.js:2:1)
      at _next (tests/integration/reviewController.test.js:2:1)
      at Object.<anonymous> (tests/integration/reviewController.test.js:2:1)

FAIL tests/integration/announcement.test.js (5.17 s)
  ● Announcement Feature Integration Test › sendAnnouncement › should send an announcement successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      54 |
      55 |             // Verify the response
    > 56 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      57 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      58 |                 message: 'Message sent successfully',
      59 |                 result: expect.any(Object)

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:56:32)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › Negative Test Cases for sendAnnouncement › should fail when message content is missing

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"error": "Bind parameters must not contain undefined. To pass SQL NULL specify JS null", "message": "Error sending message"}
    Received: {"error": "Unknown column 'account_status' in 'where clause'", "message": "Error sending message"}

    Number of calls: 1

      111 |             // Verify the response
      112 |             expect(res.status).toHaveBeenCalledWith(500);
    > 113 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
          |                              ^
      114 |                 message: 'Error sending message',
      115 |                 error: 'Bind parameters must not contain undefined. To pass SQL NULL specify JS null'
      116 |             }));

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:113:30)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › Negative Test Cases for sendAnnouncement › should fail when the user does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"error": "User with username 'nonExistentUser' not found.", "message": "Error sending message"}
    Received: {"error": "Unknown column 'account_status' in 'where clause'", "message": "Error sending message"}

    Number of calls: 1

      135 |             // Verify the response
      136 |             expect(res.status).toHaveBeenCalledWith(500);
    > 137 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
          |                              ^
      138 |                 message: 'Error sending message',
      139 |                 error: "User with username 'nonExistentUser' not found."
      140 |             }));

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:137:30)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › getAllAnnouncements › should retrieve all announcements

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      165 |
      166 |             // Verify the response
    > 167 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      168 |             expect(res.json).toHaveBeenCalledWith(expect.any(Array));
      169 |             const announcements = res.json.mock.calls[0][0];
      170 |             expect(announcements.length).toBeGreaterThan(0);

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:167:32)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

  ● Announcement Feature Integration Test › Negative Test Cases for getAllAnnouncements › should return an empty array when there are no announcements

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      192 |
      193 |             // Verify the response
    > 194 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      195 |             expect(res.json).toHaveBeenCalledWith([]);
      196 |         });
      197 |     });

      at toHaveBeenCalledWith (tests/integration/announcement.test.js:194:32)
      at call (tests/integration/announcement.test.js:2:1)
      at Generator.tryCatch (tests/integration/announcement.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)
      at asyncGeneratorStep (tests/integration/announcement.test.js:2:1)

FAIL tests/unit/incidentPostModel.test.js
  ● IncidentPostModel Unit Tests › createIncidentPost › should create a new incident post and return the created post

    Failed to create incident post. Please try again later.

      63 |         } catch (err) {
      64 |             console.error('Error inserting incident post:', err.message);
    > 65 |             throw new Error('Failed to create incident post. Please try again later.');
         |                   ^
      66 |         }              
      67 |     }
      68 |     

      at _callee$ (models/incidentPostModel.js:65:19)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

  ● IncidentPostModel Unit Tests › insertImage › should insert an image successfully

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { json } from 'express';
    > 2 | import { getDatabaseConnection } from '../configurations/dbConfig.js';
        | ^
      3 |
      4 | class IncidentPostModel {
      5 |     static async createIncidentPost(title, details, resource_details, sender_name, sender_status) {

      at _nonIterableRest (models/incidentPostModel.js:2:1)
      at _nonIterableRest (models/incidentPostModel.js:2:1)
      at _slicedToArray (models/incidentPostModel.js:81:72)
      at call (models/incidentPostModel.js:2:1)
      at Generator.tryCatch (models/incidentPostModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostModel.js:2:1)

  ● IncidentPostModel Unit Tests › insertImage › should handle database errors gracefully

    Database error

      93 |
      94 |     it("should handle database errors gracefully", async () => {
    > 95 |       mockDb.execute.mockRejectedValueOnce(new Error("Database error"));
         |                                            ^
      96 |       const result = await IncidentPostModel.insertImage(
      97 |         "testuser",
      98 |         1,

      at _callee4$ (tests/unit/incidentPostModel.test.js:95:44)
      at call (tests/unit/incidentPostModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostModel.test.js:2:1)
      at _next (tests/unit/incidentPostModel.test.js:2:1)
      at Object.<anonymous> (tests/unit/incidentPostModel.test.js:2:1)

FAIL tests/unit/messageModel.test.js
  ● MessageModel › createMessage › should create a public message successfully

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { getDatabaseConnection } from '../configurations/dbConfig.js';
    > 2 |
        | ^
      3 | class MessageModel {
      4 |     // Existing method to create a public message
      5 |     static async createMessage(messageText, sender, status, timestamp, conversationId) {

      at _nonIterableRest (models/messageModel.js:2:1)
      at _nonIterableRest (models/messageModel.js:2:1)
      at _slicedToArray (models/messageModel.js:16:87)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

  ● MessageModel › createPrivateMessage › should create a private message successfully

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { getDatabaseConnection } from '../configurations/dbConfig.js';
    > 2 |
        | ^
      3 | class MessageModel {
      4 |     // Existing method to create a public message
      5 |     static async createMessage(messageText, sender, status, timestamp, conversationId) {

      at _nonIterableRest (models/messageModel.js:2:1)
      at _nonIterableRest (models/messageModel.js:2:1)
      at _slicedToArray (models/messageModel.js:202:85)
      at call (models/messageModel.js:2:1)
      at Generator.tryCatch (models/messageModel.js:2:1)
      at Generator._invoke [as next] (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)
      at asyncGeneratorStep (models/messageModel.js:2:1)

FAIL tests/unit/reviewModel.test.js
  ● ReviewModel › getReviewsByResourceId › should fetch reviews by resource ID successfully (positive)

    expect(received).toBe(expected) // Object.is equality

    Expected: "SELECT reviewer_name, review_content, upvote_downvote, created_at FROM resource_reviews WHERE resource_id = ? ORDER BY created_at DESC"
    Received: "SELECT u.user_name AS reviewer_name, rr.review_content, rr.upvote_downvote, rr.created_at FROM resource_reviews rr JOIN user u ON rr.reviewer_id = u.id WHERE rr.resource_id = ? AND u.account_status = 'active' ORDER BY rr.created_at DESC;"

      36 |             `;
      37 |             const normalizeQuery = (query) => query.replace(/\s+/g, " ").trim();
    > 38 |             expect(normalizeQuery(mockConnection.execute.mock.calls[0][0])).toBe(normalizeQuery(expectedQuery));
         |                                                                             ^
      39 |             expect(mockConnection.execute.mock.calls[0][1]).toEqual([1]);
      40 |             expect(result).toEqual(reviews);
      41 |         });

      at toBe (tests/unit/reviewModel.test.js:38:77)
      at call (tests/unit/reviewModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/reviewModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/reviewModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/reviewModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/reviewModel.test.js:2:1)

  ● ReviewModel › addReview › should add a new review successfully (positive)

    TypeError: Invalid attempt to destructure non-iterable instance.
    In order to be iterable, non-array objects must have a [Symbol.iterator]() method.

      1 | import { getDatabaseConnection } from "../configurations/dbConfig.js";
    > 2 |
        | ^
      3 | class ReviewModel {
      4 |     // Fetch reviews by resource ID
      5 |     static async getReviewsByResourceId(resourceId) {

      at _nonIterableRest (models/reviewModel.js:2:1)
      at _nonIterableRest (models/reviewModel.js:2:1)
      at _slicedToArray (models/reviewModel.js:40:91)
      at call (models/reviewModel.js:2:1)
      at Generator.tryCatch (models/reviewModel.js:2:1)
      at Generator._invoke [as next] (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)
      at asyncGeneratorStep (models/reviewModel.js:2:1)

FAIL tests/unit/incidentPostMessageModel.test.js
  ● IncidentPostMessageModel Unit Tests › createIncidentPostMessageByincidentID › should create a new incident message and return the inserted record

    An error occurred while creating the incident message

      59 |         } catch (err) {
      60 |             console.error("Error creating incident message:", err.message);
    > 61 |             throw new Error("An error occurred while creating the incident message");
         |                   ^
      62 |         }        
      63 |     }
      64 |

      at _callee$ (models/incidentPostMessageModel.js:61:19)
      at call (models/incidentPostMessageModel.js:2:1)
      at Generator.tryCatch (models/incidentPostMessageModel.js:2:1)
      at Generator._invoke [as next] (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)
      at asyncGeneratorStep (models/incidentPostMessageModel.js:2:1)

  ● IncidentPostMessageModel Unit Tests › createIncidentPostMessageByincidentID › should throw an error if the INSERT query fails

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      61 |       ).rejects.toThrow("An error occurred while creating the incident message");
      62 |
    > 63 |       expect(mockDb.execute).toHaveBeenCalledTimes(1);
         |                              ^
      64 |     });
      65 |   });
      66 |

      at toHaveBeenCalledTimes (tests/unit/incidentPostMessageModel.test.js:63:30)
      at call (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)

  ● IncidentPostMessageModel Unit Tests › getIncidentPostMessagesByincidentID › should fetch all messages for a given incident post ID

    expect(received).toEqual(expected) // deep equality

    - Expected  -  3
    + Received  + 12

      Array [
    -   "SELECT id, text, sent_time, sender_name, sender_status, incidentPost_id
    -                  FROM incidentMessage
    -                  WHERE incidentPost_id = ?;",
    +   "
    +                     SELECT im.id,
    +                         im.text,
    +                         im.sent_time,
    +                         u.user_name AS sender_name,
    +                         u.status AS sender_status,
    +                         im.incidentPost_id
    +                     FROM incidentMessage im
    +                     JOIN user u ON im.sender_id = u.id
    +                     WHERE im.incidentPost_id = ?
    +                     AND u.account_status = 'active';
    +                  ",
        Array [
          1,
        ],
      ]

      91 |
      92 |       expect(mockDb.execute).toHaveBeenCalledTimes(1);
    > 93 |       expect(mockDb.execute.mock.calls[0]).toEqual([
         |                                            ^
      94 |         `SELECT id, text, sent_time, sender_name, sender_status, incidentPost_id
      95 |                  FROM incidentMessage
      96 |                  WHERE incidentPost_id = ?;`,

      at toEqual (tests/unit/incidentPostMessageModel.test.js:93:44)
      at call (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator.tryCatch (tests/unit/incidentPostMessageModel.test.js:2:1)
      at Generator._invoke [as next] (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)
      at asyncGeneratorStep (tests/unit/incidentPostMessageModel.test.js:2:1)

FAIL tests/integration/emergencyContactController.test.js (6.793 s)
  ● EmergencyContactController Integration Test › sendConnectRequest › should send a connect request from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      76 |             await EmergencyContactController.sendConnectRequest(req, res);
      77 |
    > 78 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      79 |             expect(res.json).toHaveBeenCalledWith(
      80 |                 expect.objectContaining({
      81 |                     message: "Connect request sent successfully",

      at toHaveBeenCalledWith (tests/integration/emergencyContactController.test.js:78:32)
      at call (tests/integration/emergencyContactController.test.js:2:1)
      at Generator.tryCatch (tests/integration/emergencyContactController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)

  ● EmergencyContactController Integration Test › acceptConnectRequest › should accept a connect request from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      145 |             await EmergencyContactController.acceptConnectRequest(req, res);
      146 |
    > 147 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      148 |             expect(res.json).toHaveBeenCalledWith(
      149 |                 expect.objectContaining({
      150 |                     message: "Connect request accepted successfully",

      at toHaveBeenCalledWith (tests/integration/emergencyContactController.test.js:147:32)
      at call (tests/integration/emergencyContactController.test.js:2:1)
      at Generator.tryCatch (tests/integration/emergencyContactController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/emergencyContactController.test.js:2:1)

FAIL tests/integration/resourceController.test.js (6.925 s)
  ● ResourceController Integration Tests › getUserResources › should fetch the resources for a specific user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      57 |             await ResourceController.getUserResources(req, res);
      58 |
    > 59 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      60 |             expect(res.json).toHaveBeenCalledWith({
      61 |                 username: 'testUser1',
      62 |                 water: 10,

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:59:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › getUserResources › should return 404 if the user is not found

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      75 |             await ResourceController.getUserResources(req, res);
      76 |
    > 77 |             expect(res.status).toHaveBeenCalledWith(404);
         |                                ^
      78 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      79 |                 error: 'User resources not found',
      80 |             }));

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:77:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › createResourceRequest › should create a new resource request from user1 to user2

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      163 |             await ResourceController.createResourceRequest(req, res);
      164 |
    > 165 |             expect(res.status).toHaveBeenCalledWith(201);
          |                                ^
      166 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      167 |                 message: 'Resource request created successfully',
      168 |                 request: expect.any(Object),

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:165:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › createResourceRequest › should return 404 if requested user does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      194 |             await ResourceController.createResourceRequest(req, res);
      195 |         
    > 196 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      197 |             expect(res.json).toHaveBeenCalledWith({
      198 |                 error: 'Requested user not found or has no resources available.',
      199 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:196:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › createResourceRequest › should return 400 if the requested quantity exceeds available amount of user2

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 500

    Number of calls: 1

      239 |             await ResourceController.createResourceRequest(req, res);
      240 |
    > 241 |             expect(res.status).toHaveBeenCalledWith(400);
          |                                ^
      242 |             expect(res.json).toHaveBeenCalledWith({
      243 |                 error: 'Requested quantity exceeds available amount.',
      244 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:241:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › getAllSentRequests › should fetch all requests sent by a user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      266 |             await ResourceController.getAllSentRequests(req, res);
      267 |     
    > 268 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      269 |             expect(res.json).toHaveBeenCalledWith(expect.arrayContaining([
      270 |                 expect.objectContaining({
      271 |                     requester_username: 'testUser1',

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:268:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › getAllSentRequests › should return 404 if no sent requests found for this user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      300 |             await ResourceController.getAllSentRequests(req, res);
      301 |     
    > 302 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      303 |             expect(res.json).toHaveBeenCalledWith({
      304 |                 message: 'No sent requests found for this user',
      305 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:302:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › approveRequest › should approve a request and update resources for both users

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      332 |             await ResourceController.approveRequest(req, res);
      333 |     
    > 334 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      335 |             expect(res.json).toHaveBeenCalledWith({
      336 |                 message: 'Request approved and resources updated',
      337 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:334:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

  ● ResourceController Integration Tests › approveRequest › should return 404 if the request does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      364 |             await ResourceController.approveRequest(req, res);
      365 |     
    > 366 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      367 |             expect(res.json).toHaveBeenCalledWith({
      368 |                 error: 'Request not found',
      369 |             });

      at toHaveBeenCalledWith (tests/integration/resourceController.test.js:366:32)
      at call (tests/integration/resourceController.test.js:2:1)
      at Generator.tryCatch (tests/integration/resourceController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/resourceController.test.js:2:1)

FAIL tests/integration/messageController.test.js (6.927 s)
  ● MessageController Integration Test › sendPrivateMessage › should send multiple private messages from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      68 |
      69 |                 // Verify the response
    > 70 |                 expect(res.status).toHaveBeenCalledWith(200);
         |                                    ^
      71 |                 expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      72 |                     message: 'Private message sent successfully',
      73 |                     result: expect.any(Object)

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:70:36)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when sending a message to a non-existent recipient

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      109 |
      110 |             // Verify the response
    > 111 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      112 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      113 |                 error: 'Sender or recipient not found.'
      114 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:111:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › getPrivateMessages › should retrieve private messages between testA and testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      201 |
      202 |             // Verify the response
    > 203 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      204 |             expect(res.json).toHaveBeenCalledWith(expect.any(Array));
      205 |
      206 |             // Verify that the messages include the ones we sent earlier

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:203:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should return an empty array when there are no messages between users

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      238 |
      239 |             // Verify the response
    > 240 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      241 |             expect(res.json).toHaveBeenCalledWith([]);
      242 |         });
      243 |

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:240:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when recipient does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      258 |
      259 |             // Verify the response
    > 260 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      261 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      262 |                 error: 'Sender or recipient not found.'
      263 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:260:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › getUnreadMessages › should retrieve unread messages from testA to testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      290 |
      291 |             // Verify the response
    > 292 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      293 |             const unreadMessages = res.json.mock.calls[0][0];
      294 |             expect(Array.isArray(unreadMessages)).toBe(true);
      295 |             expect(unreadMessages.length).toBeGreaterThan(0);

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:292:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should return an empty array when there are no unread messages

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      330 |
      331 |             // Verify the response
    > 332 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      333 |             const unreadMessages = res.json.mock.calls[0][0];
      334 |             expect(Array.isArray(unreadMessages)).toBe(true);
      335 |             expect(unreadMessages.length).toBe(0);

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:332:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when recipient does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      351 |
      352 |             // Verify the response
    > 353 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      354 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      355 |                 error: 'Sender or recipient not found.'
      356 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:353:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › markMessagesAsRead › should mark messages as read between testA and testB

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      383 |
      384 |             // Verify the response
    > 385 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      386 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      387 |                 message: 'Messages marked as read',
      388 |                 result: expect.any(Object)

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:385:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

  ● MessageController Integration Test › Negative Test Cases › should fail when recipient does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      415 |
      416 |             // Verify the response
    > 417 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      418 |             expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      419 |                 error: 'Recipient or user not found'
      420 |             }));

      at toHaveBeenCalledWith (tests/integration/messageController.test.js:417:32)
      at call (tests/integration/messageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/messageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/messageController.test.js:2:1)

FAIL tests/integration/ESNController.test.js
  ● Integration Test › getUserCitizenStatus › should return the citizen status and username of the test user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      36 |
      37 |             // Verify the response
    > 38 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      39 |             expect(res.json).toHaveBeenCalledWith({
      40 |                 username: 'test',
      41 |                 citizenStatus: 'Undefined',

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:38:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

  ● Integration Test › updateUserCitizenStatus › should update the citizen status of the test user and verify it

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      78 |
      79 |             // Verify the update response
    > 80 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      81 |             expect(res.json).toHaveBeenCalledWith({ message: 'Citizen status updated successfully' });
      82 |
      83 |             // Now, verify the update by querying the database directly

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:80:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

  ● Integration Test › updateUserCitizenStatus › should return 404 when trying to update a user that does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      100 |
      101 |             // Verify the response
    > 102 |             expect(res.status).toHaveBeenCalledWith(404);
          |                                ^
      103 |             expect(res.json).toHaveBeenCalledWith({
      104 |                 error: 'User not found',
      105 |             });

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:102:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

  ● Integration Test › getAllUsers › should return a list of all users

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      117 |             await ESNController.getAllUsers(req, res);
      118 |     
    > 119 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      120 |     
      121 |             // Expected users array with multiple entries for verification
      122 |             const expectedUsers = [

      at toHaveBeenCalledWith (tests/integration/ESNController.test.js:119:32)
      at call (tests/integration/ESNController.test.js:2:1)
      at Generator.tryCatch (tests/integration/ESNController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/ESNController.test.js:2:1)

FAIL tests/integration/walletControllet.test.js (5.024 s)
  ● WalletController Integration Test › getBalance › should return the correct balance for a user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      48 |             await WalletController.getBalance(req, res);
      49 |
    > 50 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      51 |             expect(res.json).toHaveBeenCalledWith({ balance: "500.00" });
      52 |         });
      53 |

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:50:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › getBalance › should return 404 if wallet not found

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      61 |             await WalletController.getBalance(req, res);
      62 |
    > 63 |             expect(res.status).toHaveBeenCalledWith(404);
         |                                ^
      64 |             expect(res.json).toHaveBeenCalledWith({ message: 'Wallet not found' });
      65 |         });
      66 |     });

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:63:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › getCards › should return all cards for a user

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      76 |             await WalletController.getCards(req, res);
      77 |
    > 78 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      79 |             expect(res.json).toHaveBeenCalledWith(expect.any(Array));
      80 |         });
      81 |

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:78:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › getCards › should return an empty array if user has no cards

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      89 |             await WalletController.getCards(req, res);
      90 |
    > 91 |             expect(res.status).toHaveBeenCalledWith(200);
         |                                ^
      92 |             expect(res.json).toHaveBeenCalledWith([]);
      93 |         });
      94 |     });

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:91:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › processDonation › should process a donation successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      110 |             await WalletController.processDonation(req, res);
      111 |
    > 112 |             expect(res.status).toHaveBeenCalledWith(200);
          |                                ^
      113 |             expect(res.json).toHaveBeenCalledWith({ message: 'Donation successful' });
      114 |
      115 |             const [rows] = await dbConnection.query(`

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:112:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

  ● WalletController Integration Test › processDonation › should fail if sender has insufficient balance

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 500

    Number of calls: 1

      134 |             await WalletController.processDonation(req, res);
      135 |
    > 136 |             expect(res.status).toHaveBeenCalledWith(400);
          |                                ^
      137 |             expect(res.json).toHaveBeenCalledWith({ message: 'Insufficient balance' });
      138 |         });
      139 |     });

      at toHaveBeenCalledWith (tests/integration/walletControllet.test.js:136:32)
      at call (tests/integration/walletControllet.test.js:2:1)
      at Generator.tryCatch (tests/integration/walletControllet.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)
      at asyncGeneratorStep (tests/integration/walletControllet.test.js:2:1)

FAIL tests/integration/incidentPostMessageController.test.js (12.732 s)
  ● IncidentPostMessageController Integration Tests › getIncidentPosts › should fetch all incident posts with associated images

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      77 |       await IncidentPostMessageController.getIncidentPosts(req, res);
      78 |
    > 79 |       expect(res.status).toHaveBeenCalledWith(200);
         |                          ^
      80 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      81 |         message: "Incident posts retrieved successfully",
      82 |         data: expect.any(Array),

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:79:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentPosts › should return 404 if no incident posts exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      90 |       await IncidentPostMessageController.getIncidentPosts(req, res);
      91 |
    > 92 |       expect(res.status).toHaveBeenCalledWith(404);
         |                          ^
      93 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      94 |         message: "No incident posts found",
      95 |       }));

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:92:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentPostByID › should fetch a single incident post by its ID

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      103 |       await IncidentPostMessageController.getIncidentPostByID(req, res);
      104 |
    > 105 |       expect(res.status).toHaveBeenCalledWith(200);
          |                          ^
      106 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      107 |         message: "Incident post retrieved successfully",
      108 |         data: expect.objectContaining({

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:105:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentPostByID › should return 404 if the incident post does not exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      117 |       await IncidentPostMessageController.getIncidentPostByID(req, res);
      118 |
    > 119 |       expect(res.status).toHaveBeenCalledWith(404);
          |                          ^
      120 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      121 |         message: "Incident post not found",
      122 |       }));

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:119:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentCommentByincidentID › should fetch all responses for a specific incident post

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 500

    Number of calls: 1

      141 |       await IncidentPostMessageController.getIncidentCommentByincidentID(req, res);
      142 |
    > 143 |       expect(res.status).toHaveBeenCalledWith(200);
          |                          ^
      144 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      145 |         message: "Incident responses retrieved successfully",
      146 |         data: expect.any(Array),

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:143:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › getIncidentCommentByincidentID › should return 404 if no responses exist for the incident post

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 404
    Received: 500

    Number of calls: 1

      156 |       await IncidentPostMessageController.getIncidentCommentByincidentID(req, res);
      157 |
    > 158 |       expect(res.status).toHaveBeenCalledWith(404);
          |                          ^
      159 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      160 |         message: "No incident responses found",
      161 |       }));

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:158:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)

  ● IncidentPostMessageController Integration Tests › newIncidentCommentByincidentID › should create a new response for an incident post

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 500

    Number of calls: 1

      174 |       await IncidentPostMessageController.newIncidentCommentByincidentID(req, res);
      175 |
    > 176 |       expect(res.status).toHaveBeenCalledWith(201);
          |                          ^
      177 |       expect(res.json).toHaveBeenCalledWith(expect.objectContaining({
      178 |         message: "Incident response created successfully",
      179 |         data: expect.objectContaining({

      at toHaveBeenCalledWith (tests/integration/incidentPostMessageController.test.js:176:26)
      at call (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator.tryCatch (tests/integration/incidentPostMessageController.test.js:2:1)
      at Generator._invoke [as next] (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)
      at asyncGeneratorStep (tests/integration/incidentPostMessageController.test.js:2:1)


Test Suites: 13 failed, 11 passed, 24 total
Tests:       63 failed, 193 passed, 256 total
Snapshots:   0 total
Time:        13.653 s
Ran all test suites.
npm verbose cwd /Users/shangchienliu/Desktop/f24-fse-sb2
npm verbose os Darwin 24.1.0
npm verbose node v20.18.0
npm verbose npm  v10.8.2
npm verbose exit 1
npm verbose code 1
